/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IMetaAggregationRouterV2,
  IMetaAggregationRouterV2Interface,
} from "../../../../../contracts/interfaces/external/kyberswap/IMetaAggregationRouterV2";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "callTarget",
            type: "address",
          },
          {
            internalType: "address",
            name: "approveTarget",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "targetData",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "address",
                name: "srcToken",
                type: "address",
              },
              {
                internalType: "address",
                name: "dstToken",
                type: "address",
              },
              {
                internalType: "address[]",
                name: "srcReceivers",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "srcAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address[]",
                name: "feeReceivers",
                type: "address[]",
              },
              {
                internalType: "uint256[]",
                name: "feeAmounts",
                type: "uint256[]",
              },
              {
                internalType: "address",
                name: "dstReceiver",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "minReturnAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "flags",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "permit",
                type: "bytes",
              },
            ],
            internalType: "struct IMetaAggregationRouterV2.SwapDescriptionV2",
            name: "desc",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "clientData",
            type: "bytes",
          },
        ],
        internalType: "struct IMetaAggregationRouterV2.SwapExecutionParams",
        name: "execution",
        type: "tuple",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasUsed",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "srcToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "dstToken",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "srcReceivers",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "srcAmounts",
            type: "uint256[]",
          },
          {
            internalType: "address[]",
            name: "feeReceivers",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "feeAmounts",
            type: "uint256[]",
          },
          {
            internalType: "address",
            name: "dstReceiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minReturnAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "flags",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "permit",
            type: "bytes",
          },
        ],
        internalType: "struct IMetaAggregationRouterV2.SwapDescriptionV2",
        name: "desc",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "executorData",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "clientData",
        type: "bytes",
      },
    ],
    name: "swapSimpleMode",
    outputs: [
      {
        internalType: "uint256",
        name: "returnAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gasUsed",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IMetaAggregationRouterV2__factory {
  static readonly abi = _abi;
  static createInterface(): IMetaAggregationRouterV2Interface {
    return new Interface(_abi) as IMetaAggregationRouterV2Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IMetaAggregationRouterV2 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IMetaAggregationRouterV2;
  }
}
