/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ICrocQuery,
  ICrocQueryInterface,
} from "../../../../../contracts/interfaces/external/ambient/ICrocQuery";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "poolIdx",
        type: "uint256",
      },
    ],
    name: "queryCurve",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "priceRoot_",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "ambientSeeds_",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "concLiq_",
            type: "uint128",
          },
          {
            internalType: "uint64",
            name: "seedDeflator_",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "concGrowth_",
            type: "uint64",
          },
        ],
        internalType: "struct CurveMath",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "poolIdx",
        type: "uint256",
      },
    ],
    name: "queryCurveTick",
    outputs: [
      {
        internalType: "int24",
        name: "",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "poolIdx",
        type: "uint256",
      },
    ],
    name: "queryPrice",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "poolIdx",
        type: "uint256",
      },
      {
        internalType: "int24",
        name: "bidTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "askTick",
        type: "int24",
      },
    ],
    name: "queryRangePosition",
    outputs: [
      {
        internalType: "uint128",
        name: "liq",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "base",
        type: "address",
      },
      {
        internalType: "address",
        name: "quote",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "poolIdx",
        type: "uint256",
      },
      {
        internalType: "int24",
        name: "bidTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "askTick",
        type: "int24",
      },
    ],
    name: "queryRangeTokens",
    outputs: [
      {
        internalType: "uint128",
        name: "liq",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "baseQty",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "quoteQty",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ICrocQuery__factory {
  static readonly abi = _abi;
  static createInterface(): ICrocQueryInterface {
    return new Interface(_abi) as ICrocQueryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ICrocQuery {
    return new Contract(address, _abi, runner) as unknown as ICrocQuery;
  }
}
