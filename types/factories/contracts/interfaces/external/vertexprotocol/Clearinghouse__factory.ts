/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  Clearinghouse,
  ClearinghouseInterface,
} from "../../../../../contracts/interfaces/external/vertexprotocol/Clearinghouse";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "subaccount",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "healthType",
        type: "uint8",
      },
    ],
    name: "getHealth",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class Clearinghouse__factory {
  static readonly abi = _abi;
  static createInterface(): ClearinghouseInterface {
    return new Interface(_abi) as ClearinghouseInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Clearinghouse {
    return new Contract(address, _abi, runner) as unknown as Clearinghouse;
  }
}
