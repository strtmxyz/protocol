/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TxDataUtils,
  TxDataUtilsInterface,
} from "../../../contracts/utils/TxDataUtils";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "arrayLength",
        type: "uint256",
      },
    ],
    name: "InputIsNotArray",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "arrayIndex",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "arrayLength",
        type: "uint256",
      },
    ],
    name: "InvalidArrayPosition",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maximum",
        type: "uint256",
      },
    ],
    name: "InvalidOffset",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dataLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredLength",
        type: "uint256",
      },
    ],
    name: "ReadingBytesOutOfBounds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    name: "convert32toAddress",
    outputs: [
      {
        internalType: "address",
        name: "o",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "arrayIndex",
        type: "uint8",
      },
    ],
    name: "getArrayIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getArrayLast",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getArrayLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "getBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getInput",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getMethod",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getParams",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "read32",
    outputs: [
      {
        internalType: "bytes32",
        name: "o",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "read4left",
    outputs: [
      {
        internalType: "bytes4",
        name: "o",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346015576108f5908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806309ff5c7d146100b75780631053f952146100b25780631eba3077146100ad578063293d8063146100a857806341dc16c3146100a3578063689015131461009e57806382f86acc14610099578063998546e314610094578063c3c6279f1461008f5763db896b571461008a57600080fd5b610693565b610649565b610609565b6105d7565b610515565b610404565b61038a565b610363565b610284565b34610159576100c536610200565b6100e260ff6100db6100d684610731565b610746565b16836107b3565b9160048301809311610138576100f883826107b3565b91821561013d57508160051b9182046020036101385761011e6101249261013494610790565b906107b3565b6040519081529081906020820190565b0390f35b61071b565b60ff9150631898751d60e31b6000521660045260245260446000fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b81601f82011215610159578035906001600160401b0382116101db5760405192601f8301601f19908116603f011684016001600160401b038111858210176101db576040528284526020838301011161015957816000926020809301838601378301015290565b61015e565b6024359060ff8216820361015957565b6044359060ff8216820361015957565b604060031982011261015957600435906001600160401b0382116101595761022a91600401610174565b9060243560ff811681036101595790565b91909160208152825180602083015260005b81811061026e575060409293506000838284010152601f8019910116010190565b806020809287010151604082860101520161024d565b34610159576060366003190112610159576004356001600160401b038111610159576102b4903690600401610174565b6102bc6101e0565b604435906014821015610349578160051b9180830460201490151715610138576102ea6100d660ff92610731565b1690808201809211610138578261033761033261030d61033d95610134976107b3565b9361032161032c6103268361032189610758565b610790565b866107b3565b95610758565b610766565b9061086a565b6040519182918261023b565b506377ca6c2160e11b600052600452601460245260446000fd5b34610159576020366003190112610159576040516004356001600160a01b03168152602090f35b34610159576040366003190112610159576004356001600160401b038111610159576103ba903690600401610174565b60243590805160048301908184116101385781116103eb5760208084840101516040519063ffffffff60e01b168152f35b90516353055dd960e11b60005260045260245260446000fd5b34610159576060366003190112610159576004356001600160401b03811161015957610434903690600401610174565b61043c6101e0565b6104446101f0565b9061045d60ff6104566100d684610731565b16846107b3565b90600482018083116101385761047390856107b3565b9081156104cd575060ff831692838211156104b3576101346101248661011e876104ad6104a86104a28a610758565b92610774565b61079d565b90610790565b63b003846b60e01b60005260ff1660045260245260446000fd5b60ff90631898751d60e31b6000521660045260245260446000fd5b602060031982011261015957600435906001600160401b0382116101595761051291600401610174565b90565b3461015957610523366104e8565b8051906003198201828111610138576105468161053f81610782565b10156107ed565b61055d8251610556836004610790565b111561082a565b806105825750505061013460405160008152602081016040526040519182918261023b565b604051601f8216928301831560051b90810160040194919384010191908201600319015b8083106105c457508252601f01601f1916604052610134915061033d565b84518352602094850194909201916105a6565b346101595760206106016100d660ff6105fa6105f236610200565b939093610731565b16906107b3565b604051908152f35b34610159576100d661063160ff61062a61062236610200565b949094610731565b16826107b3565b906004820180921161013857602091610601916107b3565b3461015957610657366104e8565b6000600482511061067b576020828101516040516001600160e01b03199091168152f35b604491516353055dd960e11b82526004526004602452fd5b34610159576060366003190112610159576004356001600160401b038111610159576106c3903690600401610174565b6024359060443590600081518385019081861161013857811161070557602084818786010151908203806106fb575b50604051908152f35b60031b1c826106f2565b604492516353055dd960e11b8352600452602452fd5b634e487b7160e01b600052601160045260246000fd5b60051b90611fe060e083169216820361013857565b60ff60049116019060ff821161013857565b906004820180921161013857565b906020820180921161013857565b600101908160011161013857565b90601f820180921161013857565b9190820180921161013857565b908160051b918083046020149015171561013857565b919082519260208201938483116101385784116107d35701602001519150565b8390516353055dd960e11b60005260045260245260446000fd5b156107f457565b60405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606490fd5b1561083157565b60405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606490fd5b916108788161053f81610782565b61088783516105568385610790565b806108a057505050604051600081526020810160405290565b60405192601f821692831560051b80858701019484860193010101905b8084106108d55750508252601f01601f191660405290565b90926020809185518152019301906108bd56fea164736f6c634300081b000a";

type TxDataUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TxDataUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TxDataUtils__factory extends ContractFactory {
  constructor(...args: TxDataUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TxDataUtils & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TxDataUtils__factory {
    return super.connect(runner) as TxDataUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TxDataUtilsInterface {
    return new Interface(_abi) as TxDataUtilsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TxDataUtils {
    return new Contract(address, _abi, runner) as unknown as TxDataUtils;
  }
}
