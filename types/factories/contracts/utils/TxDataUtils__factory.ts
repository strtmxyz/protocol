/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  TxDataUtils,
  TxDataUtilsInterface,
} from "../../../contracts/utils/TxDataUtils";

const _abi = [
  {
    inputs: [],
    name: "InputIsNotArray",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidArrayPosition",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOffset",
    type: "error",
  },
  {
    inputs: [],
    name: "ReadingBytesOutOfBounds",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    name: "convert32toAddress",
    outputs: [
      {
        internalType: "address",
        name: "o",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "arrayIndex",
        type: "uint8",
      },
    ],
    name: "getArrayIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getArrayLast",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getArrayLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "getBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getInput",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getMethod",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getParams",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "read32",
    outputs: [
      {
        internalType: "bytes32",
        name: "o",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "read4left",
    outputs: [
      {
        internalType: "bytes4",
        name: "o",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523460155761088a908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806309ff5c7d146100b75780631053f952146100b25780631eba3077146100ad578063293d8063146100a857806341dc16c3146100a3578063689015131461009e57806382f86acc14610099578063998546e314610094578063c3c6279f1461008f5763db896b571461008a57600080fd5b610642565b610601565b6105d0565b61059e565b6104dc565b6103f3565b610381565b61035a565b61027d565b34610152576100d86100e460ff6100dd6100d0366101f9565b9490946106c9565b6106de565b168261073d565b90600482019182811161013c576100fb838361073d565b8015610141578060051b90810460200361013c57600491010180921161013c57610138916101289161073d565b6040519081529081906020820190565b0390f35b6106b3565b631754cda560e31b60005260046000fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b81601f82011215610152578035906001600160401b0382116101d45760405192601f8301601f19908116603f011684016001600160401b038111858210176101d4576040528284526020838301011161015257816000926020809301838601378301015290565b610157565b6024359060ff8216820361015257565b6044359060ff8216820361015257565b604060031982011261015257600435906001600160401b038211610152576102239160040161016d565b9060243560ff811681036101525790565b91909160208152825180602083015260005b818110610267575060409293506000838284010152601f8019910116010190565b8060208092870101516040828601015201610246565b34610152576060366003190112610152576004356001600160401b038111610152576102ad90369060040161016d565b6102b56101d9565b9060443591601483101561034a578260051b928084046020149015171561013c576102e46100d860ff926106c9565b1682810180911161013c576102f9908261073d565b600481019182821161013c576103386103338561032e6103286103226101389961033e9961071a565b8661073d565b956106f0565b61071a565b6106fe565b906107d6565b60405191829182610234565b62ed0ab960e11b60005260046000fd5b34610152576020366003190112610152576040516004356001600160a01b03168152602090f35b34610152576040366003190112610152576004356001600160401b038111610152576103b190369060040161016d565b602435908051600483019081841161013c57106103e257016020908101516040516001600160e01b03199091168152f35b631853ab7360e21b60005260046000fd5b34610152576060366003190112610152576004356001600160401b0381116101525761042390369060040161016d565b61042b6101d9565b61044b60ff6104446100d861043e6101e9565b946106c9565b168361073d565b906004820180921161013c57610461828461073d565b9081156101415760ff168091111561049e57600101918260011161013c576104986101289261049261013895610727565b9061071a565b9061073d565b633135ee2560e21b60005260046000fd5b602060031982011261015257600435906001600160401b038211610152576104d99160040161016d565b90565b34610152576104ea366104af565b805190600319820182811161013c5761050d816105068161070c565b1015610759565b610524825161051d83600461071a565b1115610796565b8061054957505050610138604051600081526020810160405260405191829182610234565b604051601f8216928301831560051b90810160040194919384010191908201600319015b80831061058b57508252601f01601f1916604052610138915061033e565b845183526020948501949092019161056d565b346101525760206105c86100d860ff6105c16105b9366101f9565b9390936106c9565b169061073d565b604051908152f35b34610152576100d86105e960ff6100dd6100d0366101f9565b906004820180921161013c576020916105c89161073d565b346101525761060f366104af565b60006004825110610633576020828101516040516001600160e01b03199091168152f35b631853ab7360e21b8152600490fd5b34610152576060366003190112610152576004356001600160401b0381116101525761067290369060040161016d565b6024359060443590600081518385019081861161013c571061063357506020928391010151908203806106a9575b50604051908152f35b60031b1c386106a0565b634e487b7160e01b600052601160045260246000fd5b60051b90611fe060e083169216820361013c57565b60ff60049116019060ff821161013c57565b906004820180921161013c57565b906020820180921161013c57565b90601f820180921161013c57565b9190820180921161013c57565b908160051b918083046020149015171561013c57565b908151602082019081831161013c57106103e257016020015190565b1561076057565b60405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606490fd5b1561079d57565b60405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606490fd5b916107e4816105068161070c565b6107f3835161051d838561071a565b8061080c57505050604051600081526020810160405290565b60405192601f821692831560051b80858701019484860193010101905b8084106108415750508252601f01601f191660405290565b909260208091855181520193019061082956fea26469706673582212205468f7c271e2d95dbf9a81b3d45c7a7d2da5bb12d9a1d44416ca457c59346a6164736f6c634300081b0033";

type TxDataUtilsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TxDataUtilsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TxDataUtils__factory extends ContractFactory {
  constructor(...args: TxDataUtilsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TxDataUtils & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TxDataUtils__factory {
    return super.connect(runner) as TxDataUtils__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TxDataUtilsInterface {
    return new Interface(_abi) as TxDataUtilsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TxDataUtils {
    return new Contract(address, _abi, runner) as unknown as TxDataUtils;
  }
}
