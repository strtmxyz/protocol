/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  AssetHandler,
  AssetHandlerInterface,
} from "../../../contracts/utils/AssetHandler";

const _abi = [
  {
    inputs: [],
    name: "ChainlinkPriceExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAggregatorAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAssetForType",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "PriceAggregatorNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "PriceGetFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "PriceNotAvailable",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "assetType",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "AddedAsset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "RemovedAsset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_chainlinkTimeout",
        type: "uint256",
      },
    ],
    name: "SetChainlinkTimeout",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "assetType",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "addAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "assetType",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "aggregator",
            type: "address",
          },
        ],
        internalType: "struct IAssetHandler.Asset[]",
        name: "assets",
        type: "tuple[]",
      },
    ],
    name: "addAssets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "assetTypes",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainlinkTimeout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getUSDPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "assetType",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "aggregator",
            type: "address",
          },
        ],
        internalType: "struct IAssetHandler.Asset[]",
        name: "assets",
        type: "tuple[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "priceAggregators",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "removeAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newTimeoutPeriod",
        type: "uint256",
      },
    ],
    name: "setChainlinkTimeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234601557610b3d908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80634a5e42b1146107df5780635ade2177146107c15780636e61750c146106b8578063715018a6146106605780638b2f0f4f146105145780638da5cb5b146104de578063b02e786f146104a0578063b4fb12791461045e578063c28ad03214610396578063dd78d1281461034a578063eafa000e146100d05763f2fde38b146100a057600080fd5b346100cb5760203660031901126100cb576100c96100bc610863565b6100c4610a4c565b6109e8565b005b600080fd5b346100cb576100de366108c6565b600080516020610b1183398151915254604081901c60ff1615906001600160401b03811680159081610342575b6001149081610338575b15908161032f575b5061031e576001600160401b03198116600117600080516020610b1183398151915255816102f5575b5061014f610a82565b610157610a82565b610160336109e8565b62015f9060005561016f610a4c565b60005b82519060ff81169182101561029a576001600160a01b0361019383866109aa565b5151169161ffff60206101a683886109aa565b51015116906001600160a01b03906040906101c190886109aa565b51015116906101ce610a4c565b83158061028f575b61027e57811561026d576000848152600160209081526040808320805461ffff191661ffff8616179055600282529182902080546001600160a01b0319166001600160a01b038616179055815195865285019190915283015260ff91600080516020610ab183398151915290606090a11660ff811461025757600101610172565b634e487b7160e01b600052601160045260246000fd5b630e33ad2760e11b60005260046000fd5b63985daef360e01b60005260046000fd5b5060028114156101d6565b826102a157005b60ff60401b19600080516020610b118339815191525416600080516020610b11833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b6001600160481b0319166001600160401b0117600080516020610b118339815191525582610146565b63f92ee8a960e01b60005260046000fd5b9050158461011d565b303b159150610115565b83915061010b565b346100cb5760203660031901126100cb577fde099aaa2dda7818b7a94294895c815daf9570d6cbf8b8c016d4a149ed37a31d6020600435610389610a4c565b80600055604051908152a1005b346100cb5760603660031901126100cb576103af610863565b60243561ffff81168091036100cb576044356001600160a01b03811692908390036100cb576103dc610a4c565b6001600160a01b0316801580610453575b61027e57821561026d57600080516020610ab18339815191529260609282600052600160205260406000208161ffff1982541617905582600052600260205260406000208260018060a01b031982541617905560405192835260208301526040820152a1005b5060028214156103ed565b346100cb5760203660031901126100cb576001600160a01b0361047f610863565b166000526002602052602060018060a01b0360406000205416604051908152f35b346100cb5760203660031901126100cb576001600160a01b036104c1610863565b166000526001602052602061ffff60406000205416604051908152f35b346100cb5760003660031901126100cb57600080516020610ad1833981519152546040516001600160a01b039091168152602090f35b346100cb5760203660031901126100cb5761052d610863565b6001600160a01b03908116600090815260026020526040812054909116801561064f5760a060049160405192838092633fabe5a360e21b82525afa8060009283926105f5575b506105895763755fa30960e01b60005260046000fd5b60005481018091116102575742116105e457600081136105c7575b5080156105b657602090604051908152f35b63579a480160e01b60005260046000fd5b6402540be4008082029250811591830414171561025757816105a4565b6304c2918560e41b60005260046000fd5b9290915060a0833d60a011610647575b8161061260a0938361088d565b810103126106445750610624826109d4565b50602082015161063b6080606085015194016109d4565b50919084610573565b80fd5b3d9150610605565b63d1be873160e01b60005260046000fd5b346100cb5760003660031901126100cb57610679610a4c565b600080516020610ad183398151915280546001600160a01b031981169091556000906001600160a01b0316600080516020610af18339815191528280a3005b346100cb576106c6366108c6565b6106ce610a4c565b60005b81519060ff8116918210156100c9576001600160a01b036106f283856109aa565b5151169161ffff602061070583876109aa565b51015116906001600160a01b039060409061072090876109aa565b510151169061072d610a4c565b8315806107b6575b61027e57811561026d576000848152600160209081526040808320805461ffff191661ffff8616179055600282529182902080546001600160a01b0319166001600160a01b038616179055815195865285019190915283015260ff91600080516020610ab183398151915290606090a11660ff8114610257576001016106d1565b506002811415610735565b346100cb5760003660031901126100cb576020600054604051908152f35b346100cb5760203660031901126100cb577fb5c3bd787b070cfb84ba6afb620405d01603f2dff7019495776c0fa8be3c9095602061081b610863565b610823610a4c565b6001600160a01b03166000818152600183526040808220805461ffff19169055828252600284529081902080546001600160a01b031916905551908152a1005b600435906001600160a01b03821682036100cb57565b35906001600160a01b03821682036100cb57565b601f909101601f19168101906001600160401b038211908210176108b057604052565b634e487b7160e01b600052604160045260246000fd5b60206003198201126100cb576004356001600160401b0381116100cb57816023820112156100cb576004810135906001600160401b0382116108b0576040519261091660208460051b018561088d565b82845260246060602086019402830101918183116100cb57602401925b828410610941575050505090565b6060848303126100cb5760405190606082016001600160401b038111838210176108b05760405261097185610879565b825260208501359061ffff821682036100cb578260209283606095015261099a60408801610879565b6040820152815201930192610933565b80518210156109be5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b51906001600160501b03821682036100cb57565b6001600160a01b03168015610a3657600080516020610ad183398151915280546001600160a01b0319811683179091556001600160a01b0316600080516020610af1833981519152600080a3565b631e4fbdf760e01b600052600060045260246000fd5b600080516020610ad1833981519152546001600160a01b03163303610a6d57565b63118cdaa760e01b6000523360045260246000fd5b60ff600080516020610b118339815191525460401c1615610a9f57565b631afcd79f60e31b60005260046000fdfe1c5c32ce4af75a51987ab8ec30829ab3ebabb463470debb0cf0db177ddbfc5209016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993008be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081b000a";

type AssetHandlerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AssetHandler__factory extends ContractFactory {
  constructor(...args: AssetHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AssetHandler & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AssetHandler__factory {
    return super.connect(runner) as AssetHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetHandlerInterface {
    return new Interface(_abi) as AssetHandlerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AssetHandler {
    return new Contract(address, _abi, runner) as unknown as AssetHandler;
  }
}
