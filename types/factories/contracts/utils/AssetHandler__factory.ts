/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  AssetHandler,
  AssetHandlerInterface,
} from "../../../contracts/utils/AssetHandler";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "lastUpdated",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timeout",
        type: "uint256",
      },
    ],
    name: "ChainlinkPriceExpired",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "InvalidAggregatorAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "assetType",
        type: "uint16",
      },
    ],
    name: "InvalidAssetForType",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "PriceAggregatorNotFound",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "PriceGetFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "PriceNotAvailable",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "assetType",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "AddedAsset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "RemovedAsset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_chainlinkTimeout",
        type: "uint256",
      },
    ],
    name: "SetChainlinkTimeout",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "assetType",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "aggregator",
        type: "address",
      },
    ],
    name: "addAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "assetType",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "aggregator",
            type: "address",
          },
        ],
        internalType: "struct IAssetHandler.Asset[]",
        name: "assets",
        type: "tuple[]",
      },
    ],
    name: "addAssets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "assetTypes",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chainlinkTimeout",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getUSDPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "asset",
            type: "address",
          },
          {
            internalType: "uint16",
            name: "assetType",
            type: "uint16",
          },
          {
            internalType: "address",
            name: "aggregator",
            type: "address",
          },
        ],
        internalType: "struct IAssetHandler.Asset[]",
        name: "assets",
        type: "tuple[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "priceAggregators",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "removeAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newTimeoutPeriod",
        type: "uint256",
      },
    ],
    name: "setChainlinkTimeout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234601557610baa908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c80634a5e42b11461084c5780635ade21771461082e5780636e61750c146106ef578063715018a6146106975780638b2f0f4f146105205780638da5cb5b146104ea578063b02e786f146104ac578063b4fb12791461046a578063c28ad032146103a4578063dd78d12814610358578063eafa000e146100d05763f2fde38b146100a057600080fd5b346100cb5760203660031901126100cb576100c96100bc6108d0565b6100c4610ab9565b610a55565b005b600080fd5b346100cb576100de36610933565b600080516020610b7e83398151915254604081901c60ff1615906001600160401b03811680159081610350575b6001149081610346575b15908161033d575b5061032c576001600160401b03198116600117600080516020610b7e8339815191525581610303575b5061014f610aef565b610157610aef565b61016033610a55565b62015f9060005561016f610ab9565b60005b825160ff8216908110156102a8576001600160a01b036101928286610a17565b5151169061ffff60206101a58388610a17565b51015116906001600160a01b03906040906101c09088610a17565b51015116906101cd610ab9565b82158061029d575b61028557811561026d576000838152600160209081526040808320805461ffff191661ffff8616179055600282529182902080546001600160a01b0319166001600160a01b038616179055815194855284019190915282015260ff9190600080516020610b1e83398151915290606090a11660ff811461025757600101610172565b634e487b7160e01b600052601160045260246000fd5b50636cb7670960e11b60005260045260245260446000fd5b82639110b4d960e01b60005260045260245260446000fd5b5060028114156101d5565b826102af57005b60ff60401b19600080516020610b7e8339815191525416600080516020610b7e833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b6001600160481b0319166001600160401b0117600080516020610b7e8339815191525582610146565b63f92ee8a960e01b60005260046000fd5b9050158461011d565b303b159150610115565b83915061010b565b346100cb5760203660031901126100cb577fde099aaa2dda7818b7a94294895c815daf9570d6cbf8b8c016d4a149ed37a31d6020600435610397610ab9565b80600055604051908152a1005b346100cb5760603660031901126100cb576103bd6108d0565b6024359061ffff82168092036100cb576044356001600160a01b03811691908290036100cb576103eb610ab9565b6001600160a01b03169182158061045f575b61028557811561026d576000838152600160209081526040808320805461ffff191685179055600282529182902080546001600160a01b031916851790558151948552840191909152820152600080516020610b1e83398151915290606090a1005b5060028114156103fd565b346100cb5760203660031901126100cb576001600160a01b0361048b6108d0565b166000526002602052602060018060a01b0360406000205416604051908152f35b346100cb5760203660031901126100cb576001600160a01b036104cd6108d0565b166000526001602052602061ffff60406000205416604051908152f35b346100cb5760003660031901126100cb57600080516020610b3e833981519152546040516001600160a01b039091168152602090f35b346100cb5760203660031901126100cb576105396108d0565b6001600160a01b0390811660008181526002602052604081205490921691821561068257604051633fabe5a360e21b815260a081600481875afa806000928392610628575b5061059d57505050636b66327d60e01b60005260045260245260446000fd5b6000939293549081810180821161025757421161060d575050600081136105e8575b5081156105d157602082604051908152f35b631086478360e21b60005260045260245260446000fd5b9091506402540be4008102908082046402540be40014901517156102575790826105bf565b8363854e85c760e01b60005260045260245260445260646000fd5b9290915060a0833d60a01161067a575b8161064560a093836108fa565b81010312610677575061065782610a41565b50602082015161066e608060608501519401610a41565b5091908661057e565b80fd5b3d9150610638565b5063ec5dbdc360e01b60005260045260246000fd5b346100cb5760003660031901126100cb576106b0610ab9565b600080516020610b3e83398151915280546001600160a01b031981169091556000906001600160a01b0316600080516020610b5e8339815191528280a3005b346100cb576106fd36610933565b610705610ab9565b6000905b80519160ff8116928310156100c9576001600160a01b0361072a8484610a17565b5151169261ffff602061073d8386610a17565b51015116906001600160a01b03906040906107589086610a17565b5101511690610765610ab9565b841580610823575b61080b5781156107f2576000858152600160209081526040808320805461ffff191661ffff8616179055600282529182902080546001600160a01b0319166001600160a01b0386161790558151968752860191909152840152909160ff9190600080516020610b1e83398151915290606090a11660ff81146102575760010190610709565b8482636cb7670960e11b60005260045260245260446000fd5b84639110b4d960e01b60005260045260245260446000fd5b50600281141561076d565b346100cb5760003660031901126100cb576020600054604051908152f35b346100cb5760203660031901126100cb577fb5c3bd787b070cfb84ba6afb620405d01603f2dff7019495776c0fa8be3c909560206108886108d0565b610890610ab9565b6001600160a01b03166000818152600183526040808220805461ffff19169055828252600284529081902080546001600160a01b031916905551908152a1005b600435906001600160a01b03821682036100cb57565b35906001600160a01b03821682036100cb57565b601f909101601f19168101906001600160401b0382119082101761091d57604052565b634e487b7160e01b600052604160045260246000fd5b60206003198201126100cb576004356001600160401b0381116100cb57816023820112156100cb576004810135906001600160401b03821161091d576040519261098360208460051b01856108fa565b82845260246060602086019402830101918183116100cb57602401925b8284106109ae575050505090565b6060848303126100cb5760405190606082016001600160401b0381118382101761091d576040526109de856108e6565b825260208501359061ffff821682036100cb5782602092836060950152610a07604088016108e6565b60408201528152019301926109a0565b8051821015610a2b5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b51906001600160501b03821682036100cb57565b6001600160a01b03168015610aa357600080516020610b3e83398151915280546001600160a01b0319811683179091556001600160a01b0316600080516020610b5e833981519152600080a3565b631e4fbdf760e01b600052600060045260246000fd5b600080516020610b3e833981519152546001600160a01b03163303610ada57565b63118cdaa760e01b6000523360045260246000fd5b60ff600080516020610b7e8339815191525460401c1615610b0c57565b631afcd79f60e31b60005260046000fdfe1c5c32ce4af75a51987ab8ec30829ab3ebabb463470debb0cf0db177ddbfc5209016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c1993008be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081b000a";

type AssetHandlerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AssetHandler__factory extends ContractFactory {
  constructor(...args: AssetHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AssetHandler & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AssetHandler__factory {
    return super.connect(runner) as AssetHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetHandlerInterface {
    return new Interface(_abi) as AssetHandlerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AssetHandler {
    return new Contract(address, _abi, runner) as unknown as AssetHandler;
  }
}
