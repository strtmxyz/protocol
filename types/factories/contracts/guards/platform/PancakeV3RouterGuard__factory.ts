/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  PancakeV3RouterGuard,
  PancakeV3RouterGuardInterface,
} from "../../../../contracts/guards/platform/PancakeV3RouterGuard";

const _abi = [
  {
    inputs: [],
    name: "ExpiredDeadline",
    type: "error",
  },
  {
    inputs: [],
    name: "InputIsNotArray",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidArrayPosition",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOffset",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "PayableAmountMustBeGreaterThanZero",
    type: "error",
  },
  {
    inputs: [],
    name: "ReadingBytesOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedSourceAsset",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dex",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "AddLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dex",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sourceAsset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sourceAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dstAsset",
        type: "address",
      },
    ],
    name: "ExchangeFrom",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dex",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sourceAsset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dstAsset",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dstAmount",
        type: "uint256",
      },
    ],
    name: "ExchangeTo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dex",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "RemoveLiquidity",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dex",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountMinimum",
        type: "uint256",
      },
    ],
    name: "UnwrapNativeToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "endpoint",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "VertexDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "endpoint",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "VertexSlowMode",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    name: "convert32toAddress",
    outputs: [
      {
        internalType: "address",
        name: "o",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "arrayIndex",
        type: "uint8",
      },
    ],
    name: "getArrayIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getArrayLast",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getArrayLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "getBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getInput",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getMethod",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getParams",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "platformName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "read32",
    outputs: [
      {
        internalType: "bytes32",
        name: "o",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "read4left",
    outputs: [
      {
        internalType: "bytes4",
        name: "o",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "txGuard",
    outputs: [
      {
        internalType: "uint16",
        name: "txType",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_nativeTokenAmount",
        type: "uint256",
      },
    ],
    name: "txGuard",
    outputs: [
      {
        internalType: "uint16",
        name: "txType",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234601557610f84908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806309ff5c7d146100f75780631053f952146100f25780631eba3077146100ed578063293d8063146100e857806341dc16c3146100e35780636179309d146100de57806368901513146100d95780638129fc1c146100d457806382f86acc146100cf578063998546e3146100ca578063bd125da4146100c5578063c3c6279f146100c0578063d721fe02146100bb5763db896b57146100b657600080fd5b610a8d565b6109d5565b610970565b6107f6565b6107c5565b610793565b610671565b610658565b610543565b61045b565b6103e9565b6103c2565b6102e5565b6101fc565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b0382119082101761013557604052565b6100fc565b6001600160401b03811161013557601f01601f191660200190565b81601f8201121561019c5780359061016c8261013a565b9261017a6040519485610112565b8284526020838301011161019c57816000926020809301838601378301015290565b600080fd5b6024359060ff8216820361019c57565b6044359060ff8216820361019c57565b604060031982011261019c57600435906001600160401b03821161019c576101eb91600401610155565b9060243560ff8116810361019c5790565b3461019c5761021d61022960ff610222610215366101c1565b949094610b23565b610b38565b1682610de7565b906004820191828111610281576102408383610de7565b8015610286578060051b9081046020036102815760049101018092116102815761027d9161026d91610de7565b6040519081529081906020820190565b0390f35b610b0d565b631754cda560e31b60005260046000fd5b60005b8381106102aa5750506000910152565b818101518382015260200161029a565b906020809281815201906102d981518092818552858086019101610297565b601f01601f1916010190565b3461019c57606036600319011261019c576004356001600160401b03811161019c57610315903690600401610155565b61031d6101a1565b906044359160148310156103b2578260051b92808404602014901517156102815761034c61021d60ff92610b23565b16828101809111610281576103619082610de7565b6004810191828211610281576103a061039b8561039661039061038a61027d996103a699610b74565b86610de7565b95610b4a565b610b74565b610b58565b90610e80565b604051918291826102ba565b62ed0ab960e11b60005260046000fd5b3461019c57602036600319011261019c576040516004356001600160a01b03168152602090f35b3461019c57604036600319011261019c576004356001600160401b03811161019c57610419903690600401610155565b6024359080516004830190818411610281571061044a57016020908101516040516001600160e01b03199091168152f35b631853ab7360e21b60005260046000fd5b3461019c57606036600319011261019c576004356001600160401b03811161019c5761048b903690600401610155565b6104936101a1565b6104b360ff6104ac61021d6104a66101b1565b94610b23565b1683610de7565b9060048201809211610281576104c98284610de7565b9081156102865760ff16809111156105065760010191826001116102815761050061026d926104fa61027d95610b81565b90610b74565b90610de7565b633135ee2560e21b60005260046000fd5b600435906001600160a01b038216820361019c57565b602435906001600160a01b038216820361019c57565b3461019c57606036600319011261019c5761055c610517565b61056461052d565b6044356001600160401b03811161019c57610583903690600401610155565b91600091630d64d59360e21b6001600160e01b03196105a186610b97565b16146105b7575b60405161ffff84168152602090f35b60a092506105f06105e86105d9600080516020610f1883398151915296610cb7565b60208082518301019101610be9565b915050610efe565b60405191600180851b03168252600180841b03166020820152600060408201526000606082015260006080820152a161027d600238806105a8565b602060031982011261019c57600435906001600160401b03821161019c5761065591600401610155565b90565b3461019c5761027d6103a661066c3661062b565b610cb7565b3461019c57600036600319011261019c57600080516020610f588339815191525460ff604082901c1615906001600160401b03168015908161078b575b6001149081610781575b159081610778575b5061076757600080516020610f5883398151915280546001600160401b031916600117905580610742575b6106f3610d57565b6106f957005b600080516020610f58833981519152805460ff60401b19169055604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1005b600080516020610f58833981519152805460ff60401b1916600160401b1790556106eb565b63f92ee8a960e01b60005260046000fd5b905015386106c0565b303b1591506106b8565b8291506106ae565b3461019c5760206107bd61021d60ff6107b66107ae366101c1565b939093610b23565b1690610de7565b604051908152f35b3461019c5761021d6107de60ff610222610215366101c1565b9060048201809211610281576020916107bd91610de7565b3461019c57608036600319011261019c5761080f610517565b61081761052d565b6044356001600160401b03811161019c57610836903690600401610155565b91606435600093811561095f57604051634df48c7360e11b8152600060048201526020816024816001600160a01b0388165afa90811561095a5760009161092b575b501561091a57630d64d59360e21b6001600160e01b031961089883610b97565b16146108ae575b60405161ffff86168152602090f35b600080516020610f188339815191529450906108d26105e86105d961090a94610cb7565b604080516001600160a01b039485168152949093166020850152600092840183905260608401526080830191909152819060a0820190565b0390a1600261027d38808061089f565b634a6bf3a560e11b60005260046000fd5b61094d915060203d602011610953575b6109458183610112565b810190610dc3565b38610878565b503d61093b565b610ddb565b63245d513d60e01b60005260046000fd5b3461019c5760206109886109833661062b565b610b97565b6040516001600160e01b03199091168152f35b90600182811c921680156109cb575b60208310146109b557565b634e487b7160e01b600052602260045260246000fd5b91607f16916109aa565b3461019c57600036600319011261019c57604051600080546109f68161099b565b8084529060018116908115610a695750600114610a1e575b61027d836103a681850382610112565b6000808052600080516020610f38833981519152939250905b808210610a4f575090915081016020016103a6610a0e565b919260018160209254838588010152019101909291610a37565b60ff191660208086019190915291151560051b840190910191506103a69050610a0e565b3461019c57606036600319011261019c576004356001600160401b03811161019c57610abd903690600401610155565b602435906044359060008151838501908186116102815710610afe5750602092839101015190820380610af4575b50604051908152f35b60031b1c38610aeb565b631853ab7360e21b8152600490fd5b634e487b7160e01b600052601160045260246000fd5b60051b90611fe060e083169216820361028157565b60ff60049116019060ff821161028157565b906004820180921161028157565b906020820180921161028157565b90601f820180921161028157565b9190820180921161028157565b908160051b918083046020149015171561028157565b600481511061044a576020015190565b81601f8201121561019c578051610bbd8161013a565b92610bcb6040519485610112565b8184526020828401011161019c576106559160208085019101610297565b909160608284031261019c5781516001600160401b03811161019c5783610c11918401610ba7565b60208301519093906001600160401b03811161019c5783019080601f8301121561019c578151916001600160401b038311610135578260051b9060405193610c5c6020840186610112565b84526020808501928201019183831161019c5760208201905b838210610c8a57505050505060409092015190565b81516001600160401b03811161019c57602091610cac87848094880101610ba7565b815201910190610c75565b8051600319810181811161028157610cd981610cd281610b66565b1015610e03565b610cf08351610ce9836004610b74565b1115610e40565b80610d0957505050604051600081526020810160405290565b604051926004601f8316801560051b908181880101956003199087010193010101905b808410610d445750508252601f01601f191660405290565b9092602080918551815201930190610d2c565b610d6260005461099b565b601f8111610d8c575b5060287314185b98d85ad9558cd49bdd5d195c91dd585c9960621b01600055565b60008052601f0160051c600080516020610f38833981519152908101905b818110610db75750610d6b565b60008155600101610daa565b9081602091031261019c5751801515810361019c5790565b6040513d6000823e3d90fd5b9081516020820190818311610281571061044a57016020015190565b15610e0a57565b60405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606490fd5b15610e4757565b60405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606490fd5b91610e8e81610cd281610b66565b610e9d8351610ce98385610b74565b80610eb657505050604051600081526020810160405290565b60405192601f821692831560051b80858701019484860193010101905b808410610eeb5750508252601f01601f191660405290565b9092602080918551815201930190610ed3565b4211610f0657565b63f87d927160e01b60005260046000fdfea97e31af7107c33444693d899a2c43581941b2fe44301e3e013d95c44097a086290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081b000a";

type PancakeV3RouterGuardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PancakeV3RouterGuardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PancakeV3RouterGuard__factory extends ContractFactory {
  constructor(...args: PancakeV3RouterGuardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PancakeV3RouterGuard & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): PancakeV3RouterGuard__factory {
    return super.connect(runner) as PancakeV3RouterGuard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PancakeV3RouterGuardInterface {
    return new Interface(_abi) as PancakeV3RouterGuardInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PancakeV3RouterGuard {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as PancakeV3RouterGuard;
  }
}
