/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ERC20PancakeLPGuard,
  ERC20PancakeLPGuardInterface,
} from "../../../../contracts/guards/asset/ERC20PancakeLPGuard";

const _abi = [
  {
    inputs: [],
    name: "InputIsNotArray",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidArrayPosition",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOffset",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "PayableAmountMustBeZero",
    type: "error",
  },
  {
    inputs: [],
    name: "ReadingBytesOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedAsset",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedSpenderApproval",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnwrapNativeToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WrapNativeToken",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "calcValue",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    name: "convert32toAddress",
    outputs: [
      {
        internalType: "address",
        name: "o",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "arrayIndex",
        type: "uint8",
      },
    ],
    name: "getArrayIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getArrayLast",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getArrayLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "getBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getInput",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getMethod",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getParams",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_WETH",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "read32",
    outputs: [
      {
        internalType: "bytes32",
        name: "o",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "read4left",
    outputs: [
      {
        internalType: "bytes4",
        name: "o",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "txGuard",
    outputs: [
      {
        internalType: "uint16",
        name: "txType",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_nativeTokenAmount",
        type: "uint256",
      },
    ],
    name: "txGuard",
    outputs: [
      {
        internalType: "uint16",
        name: "txType",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346015576117ae908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806309ff5c7d146101375780631053f952146101325780631d81e80f1461012d5780631eba307714610128578063293d80631461012357806341dc16c31461011e5780636179309d1461011957806368901513146101145780638129fc1c1461010f57806382f86acc1461010a578063998546e314610105578063ad5c464814610100578063bd125da4146100fb578063c3c6279f146100f6578063c4d66de8146100f1578063cf54aaa0146100ec578063d4fac45d146100e75763db896b57146100e257600080fd5b610e58565b610dc2565b610d2f565b610c56565b610c30565b610a0f565b6109e6565b6109b5565b610983565b610894565b61087b565b6107ee565b610703565b610691565b61066a565b61040d565b61031b565b610231565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b0382119082101761017557604052565b61013c565b6001600160401b03811161017557601f01601f191660200190565b9291926101a18261017a565b916101af6040519384610152565b8294818452818301116101cc578281602093846000960137010152565b600080fd5b9080601f830112156101cc578160206101ec93359101610195565b90565b60ff8116036101cc57565b60406003198201126101cc57600435906001600160401b0382116101cc57610224916004016101d1565b906024356101ec816101ef565b346101cc5761025261025e60ff61025761024a366101fa565b949094610eee565b610f03565b168261158e565b9060048201918281116102b657610275838361158e565b80156102bb578060051b9081046020036102b65760049101018092116102b6576102b2916102a29161158e565b6040519081529081906020820190565b0390f35b610ed8565b631754cda560e31b60005260046000fd5b60005b8381106102df5750506000910152565b81810151838201526020016102cf565b6040916020825261030f81518092816020860152602086860191016102cc565b601f01601f1916010190565b346101cc5760603660031901126101cc576004356001600160401b0381116101cc5761034b9036906004016101d1565b60243590610358826101ef565b6044359160148310156103ec578260051b92808404602014901517156102b65761038661025260ff92610eee565b168281018091116102b65761039b908261158e565b60048101918282116102b6576103da6103d5856103d06103ca6103c46102b2996103e099610f3f565b8661158e565b95610f15565b610f3f565b610f23565b90611627565b604051918291826102ef565b62ed0ab960e11b60005260046000fd5b6001600160a01b038116036101cc57565b346101cc5760603660031901126101cc5760043561042a816103fc565b6004602435610438816103fc565b602060443560405163c45a015560e01b815290949093849182906001600160a01b03165afa9182156105a057600092610636575b50604051630240bc6b60e21b8152926001600160a01b039190911690606084600481855afa9384156105a057600090600095610601575b506040516318160ddd60e01b815291602083600481875afa9081156105a0576104fd936000926105c2575b506104ee826104e9836104e9959660018060701b0316610f62565b610fef565b966001600160701b0316610f62565b92604051630dfe168160e01b8152602081600481865afa9081156105a057600492602092610534926000916105a5575b50866116b6565b926040519283809263d21220a760e01b82525afa9384156105a0576102b2946102a2946105699360009261056f575b506116b6565b90610f3f565b61059291925060203d602011610599575b61058a8183610152565b810190610f75565b9038610563565b503d610580565b610f8a565b6105bc9150843d86116105995761058a8183610152565b3861052d565b6104e9925081936104e96105f06104ee9360203d6020116105fa575b6105e88183610152565b810190610fe0565b94505093506104ce565b503d6105de565b905061062691945060603d60601161062f575b61061e8183610152565b810190610faa565b509390386104a3565b503d610614565b61065091925060203d6020116105995761058a8183610152565b903861046c565b6001600160a01b03909116815260200190565b346101cc5760203660031901126101cc576040516004356001600160a01b03168152602090f35b346101cc5760403660031901126101cc576004356001600160401b0381116101cc576106c19036906004016101d1565b60243590805160048301908184116102b657106106f257016020908101516040516001600160e01b03199091168152f35b631853ab7360e21b60005260046000fd5b346101cc5760603660031901126101cc576004356001600160401b0381116101cc576107339036906004016101d1565b60243561073f816101ef565b61076360ff61075c61025260443594610757866101ef565b610eee565b168361158e565b90600482018092116102b657610779828461158e565b9081156102bb5760ff16809111156107b05760010191826001116102b6576107aa6102a2926105696102b295610f4c565b9061158e565b633135ee2560e21b60005260046000fd5b9181601f840112156101cc578235916001600160401b0383116101cc57602083818601950101116101cc57565b346101cc5760603660031901126101cc5760043561080b816103fc565b602435610817816103fc565b604435906001600160401b0382116101cc5760209261083d6108459336906004016107c1565b9290916110c8565b61ffff60405191168152f35b60206003198201126101cc57600435906001600160401b0382116101cc576101ec916004016101d1565b346101cc576102b26103e061088f36610851565b611475565b346101cc5760003660031901126101cc576000805160206117828339815191525460ff604082901c1615906001600160401b03168015908161097b575b6001149081610971575b159081610968575b5061095757806108f1611515565b61094a575b6108fc57005b61091b600080516020611782833981519152805460ff60401b19169055565b604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1005b610952611537565b6108f6565b63f92ee8a960e01b60005260046000fd5b905015386108e3565b303b1591506108db565b8291506108d1565b346101cc5760206109ad61025260ff6109a661099e366101fa565b909390610eee565b169061158e565b604051908152f35b346101cc576102526109ce60ff61025761024a366101fa565b90600482018092116102b6576020916109ad9161158e565b346101cc5760003660031901126101cc576000546040516001600160a01b039091168152602090f35b346101cc5760803660031901126101cc57600435610a2c816103fc565b602435610a38816103fc565b6044356001600160401b0381116101cc57610a579036906004016107c1565b6064359291630d0e30db60e41b6001600160e01b0319610a80610a7b368686610195565b61100f565b161480610c02575b80610bf9575b15610bce575050604051634df48c7360e11b81526001600160a01b0384169160209082908190610ac19060048301610657565b0381855afa9081156105a057600091610baf575b5015610b6f57604051634df48c7360e11b81526000600482015290602090829060249082905afa9081156105a057600091610b80575b5015610b6f576000547f886680222fab5497ac86bd83975ffc3d4312e8e6837dcf7e40a054f1973585db9290610b51906001600160a01b03169260405193849384611037565b0390a16102b260095b60405161ffff90911681529081906020820190565b630928045160e21b60005260046000fd5b610ba2915060203d602011610ba8575b610b9a8183610152565b81019061101f565b38610b0b565b503d610b90565b610bc8915060203d602011610ba857610b9a8183610152565b38610ad5565b90919392610be8576102b293610be3936110c8565b610b5a565b630b09355d60e01b60005260046000fd5b50831515610a8e565b50600054610c20906001600160a01b03165b6001600160a01b031690565b6001600160a01b03841614610a88565b346101cc576020610c43610a7b36610851565b6040516001600160e01b03199091168152f35b346101cc5760203660031901126101cc57600435610c73816103fc565b600080516020611782833981519152549060ff604083901c1615916001600160401b031680159081610d27575b6001149081610d1d575b159081610d14575b50610957576108f69082610cc4611515565b610cea57600080546001600160a01b0319166001600160a01b0392909216919091179055565b610cf2611537565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b90501538610cb2565b303b159150610caa565b839150610ca0565b346101cc5760203660031901126101cc57600460208135610d4f816103fc565b60405163313ce56760e01b815292839182906001600160a01b03165afa80156105a0576102b291600091610d93575b5060405160ff90911681529081906020820190565b610db5915060203d602011610dbb575b610dad8183610152565b810190611579565b38610d7e565b503d610da3565b346101cc5760403660031901126101cc57600435610ddf816103fc565b602060243591610dee836103fc565b6040516370a0823160e01b81526001600160a01b0391821660048201529283916024918391165afa80156105a0576102b291600091610e39575b506040519081529081906020820190565b610e52915060203d6020116105fa576105e88183610152565b38610e28565b346101cc5760603660031901126101cc576004356001600160401b0381116101cc57610e889036906004016101d1565b602435906044359060008151838501908186116102b65710610ec95750602092839101015190820380610ebf575b50604051908152f35b60031b1c38610eb6565b631853ab7360e21b8152600490fd5b634e487b7160e01b600052601160045260246000fd5b60051b90611fe060e08316921682036102b657565b60ff60049116019060ff82116102b657565b90600482018092116102b657565b90602082018092116102b657565b90601f82018092116102b657565b919082018092116102b657565b908160051b91808304602014901517156102b657565b818102929181159184041417156102b657565b908160209103126101cc57516101ec816103fc565b6040513d6000823e3d90fd5b51906001600160701b03821682036101cc57565b908160609103126101cc57610fbe81610f96565b916040610fcd60208401610f96565b92015163ffffffff811681036101cc5790565b908160209103126101cc575190565b8115610ff9570490565b634e487b7160e01b600052601260045260246000fd5b60048151106106f2576020015190565b908160209103126101cc575180151581036101cc5790565b6001600160a01b03918216815291166020820152604081019190915260600190565b91906040838203126101cc578251611070816103fc565b602084015190936001600160401b0382116101cc570181601f820112156101cc57805161109c8161017a565b926110aa6040519485610152565b818452602082840101116101cc576101ec91602080850191016102cc565b600093926001600160e01b03196110e3610a7b368785610195565b1663095ea7b360e01b81036113165750611122919293945061111d90611115610c14611110368985610195565b611559565b953691610195565b611569565b60405163c45a015560e01b81529093906001600160a01b038316602082600481845afa9182156105a0576000926112f5575b5060206040518092634df48c7360e11b825281806111758a60048301610657565b03915afa600091816112d4575b506112cf575060405163cc435bf360e01b8152602081806111a68860048301610657565b03816001600160a01b0386165afa9081156105a0576000916112b0575b505b15610b6f5760006040518092631c09fa9b60e21b825281806111ea8760048301610657565b03916001600160a01b03165afa9081156105a05760009161128c575b506001600160a01b03168015908115611282575b5061127157604080516001600160a01b039384168152938316602085015291169082015260608101919091527f64d4ed24bb3d6bfdd667acaeaad20f8795915514e1c67fb333b1ee94fe970d1590608090a1600190565b633790c8eb60e21b60005260046000fd5b905030143861121a565b6112a991503d806000833e6112a18183610152565b810190611059565b5038611206565b6112c9915060203d602011610ba857610b9a8183610152565b386111c3565b6111c5565b6112ee91925060203d602011610ba857610b9a8183610152565b9038611182565b61130f91925060203d6020116105995761058a8183610152565b9038611154565b60005461132b906001600160a01b0316610c14565b6001600160a01b03851614611343575b505050505090565b632e1a7d4d60e01b14611357575b8061133b565b604051634df48c7360e11b815293945091929091906001600160a01b03831690602081806113888860048301610657565b0381855afa9081156105a057600091611456575b5015610b6f57604051634df48c7360e11b81526000600482015290602090829060249082905afa9081156105a057600091611437575b5015610b6f5761141d61140e61088f611429937f11b8c8bf8a65d98dc04255ca61faa6cf1b149350336c90d12227ca1463b5970d973691610195565b60208082518301019101610fe0565b60405193849384611037565b0390a1600a38808080611351565b611450915060203d602011610ba857610b9a8183610152565b386113d2565b61146f915060203d602011610ba857610b9a8183610152565b3861139c565b805160031981018181116102b6576114978161149081610f31565b10156115aa565b6114ae83516114a7836004610f3f565b11156115e7565b806114c757505050604051600081526020810160405290565b604051926004601f8316801560051b908181880101956003199087010193010101905b8084106115025750508252601f01601f191660405290565b90926020809185518152019301906114ea565b60008051602061178283398151915280546001600160401b0319166001179055565b600080516020611782833981519152805460ff60401b1916600160401b179055565b6101ec9060ff6109a66000610f03565b6101ec9060ff6109a66020610f03565b908160209103126101cc57516101ec816101ef565b90815160208201908183116102b657106106f257016020015190565b156115b157565b60405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606490fd5b156115ee57565b60405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606490fd5b916116358161149081610f31565b61164483516114a78385610f3f565b8061165d57505050604051600081526020810160405290565b60405192601f821692831560051b80858701019484860193010101905b8084106116925750508252601f01601f191660405290565b909260208091855181520193019061167a565b60ff16604d81116102b657600a0a90565b6020604051809263b3596f0760e01b825281806116d68760048301610657565b03916001600160a01b03165afa9081156105a05760049360209261170292600091611764575b50610f62565b60405163313ce56760e01b815293909284919082906001600160a01b03165afa9182156105a0576101ec9261173f91600091611745575b506116a5565b90610fef565b61175e915060203d602011610dbb57610dad8183610152565b38611739565b61177b9150843d86116105fa576105e88183610152565b386116fc56fef0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081b000a";

type ERC20PancakeLPGuardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20PancakeLPGuardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20PancakeLPGuard__factory extends ContractFactory {
  constructor(...args: ERC20PancakeLPGuardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ERC20PancakeLPGuard & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): ERC20PancakeLPGuard__factory {
    return super.connect(runner) as ERC20PancakeLPGuard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20PancakeLPGuardInterface {
    return new Interface(_abi) as ERC20PancakeLPGuardInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC20PancakeLPGuard {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ERC20PancakeLPGuard;
  }
}
