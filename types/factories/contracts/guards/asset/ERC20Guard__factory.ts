/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ERC20Guard,
  ERC20GuardInterface,
} from "../../../../contracts/guards/asset/ERC20Guard";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "arrayLength",
        type: "uint256",
      },
    ],
    name: "InputIsNotArray",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "arrayIndex",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "arrayLength",
        type: "uint256",
      },
    ],
    name: "InvalidArrayPosition",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maximum",
        type: "uint256",
      },
    ],
    name: "InvalidOffset",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "PayableAmountMustBeZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dataLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredLength",
        type: "uint256",
      },
    ],
    name: "ReadingBytesOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedAsset",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedSpenderApproval",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnwrapNativeToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WrapNativeToken",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "calcValue",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    name: "convert32toAddress",
    outputs: [
      {
        internalType: "address",
        name: "o",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "arrayIndex",
        type: "uint8",
      },
    ],
    name: "getArrayIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getArrayLast",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getArrayLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "getBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getInput",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getMethod",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getParams",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_WETH",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "read32",
    outputs: [
      {
        internalType: "bytes32",
        name: "o",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "read4left",
    outputs: [
      {
        internalType: "bytes4",
        name: "o",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "txGuard",
    outputs: [
      {
        internalType: "uint16",
        name: "txType",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_nativeTokenAmount",
        type: "uint256",
      },
    ],
    name: "txGuard",
    outputs: [
      {
        internalType: "uint16",
        name: "txType",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346015576115a9908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806309ff5c7d146101275780631053f952146101225780631d81e80f1461011d5780631eba307714610118578063293d80631461011357806341dc16c31461010e5780636179309d14610109578063689015131461010457806382f86acc146100ff578063998546e3146100fa578063ad5c4648146100f5578063bd125da4146100f0578063c3c6279f146100eb578063c4d66de8146100e6578063cf54aaa0146100e1578063d4fac45d146100dc5763db896b57146100d757600080fd5b610d5e565b610cc8565b610c45565b610adc565b610ab6565b610895565b61086c565b61082c565b6107fa565b6107e1565b610754565b61063b565b6105c1565b61059a565b610406565b610312565b610221565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b0382119082101761016557604052565b61012c565b6001600160401b03811161016557601f01601f191660200190565b9291926101918261016a565b9161019f6040519384610142565b8294818452818301116101bc578281602093846000960137010152565b600080fd5b9080601f830112156101bc578160206101dc93359101610185565b90565b60ff8116036101bc57565b60406003198201126101bc57600435906001600160401b0382116101bc57610214916004016101c1565b906024356101dc816101df565b346101bc5761022f366101ea565b61024c60ff61024561024084610dfc565b610e11565b1683611416565b91600483018093116102a2576102628382611416565b9182156102a757508160051b9182046020036102a25761028861028e9261029e94610e5b565b90611416565b6040519081529081906020820190565b0390f35b610de6565b60ff9150631898751d60e31b6000521660045260245260446000fd5b60005b8381106102d65750506000910152565b81810151838201526020016102c6565b6040916020825261030681518092816020860152602086860191016102c3565b601f01601f1916010190565b346101bc5760603660031901126101bc576004356001600160401b0381116101bc576103429036906004016101c1565b60243561034e816101df565b6044359060148210156103db578160051b91808304602014901517156102a25761037c61024060ff92610dfc565b16908082018092116102a257826103c96103c461039f6103cf9561029e97611416565b936103b36103be6103b8836103b389610e23565b610e5b565b86611416565b95610e23565b610e31565b906114cd565b604051918291826102e6565b506377ca6c2160e11b600052600452601460245260446000fd5b6001600160a01b038116036101bc57565b346101bc5760603660031901126101bc57600435610423816103f5565b60243561042f816103f5565b60405163c45a015560e01b815260443592602090829060049082906001600160a01b03165afa90811561052657600091610558575b506020604051809263b3596f0760e01b825281806104858760048301610587565b03916001600160a01b03165afa908115610526576004936020926104b19260009161052b575b50610e7e565b60405163313ce56760e01b815293909284919082906001600160a01b03165afa908115610526576104f161028e9261029e946000916104f7575b5061154b565b9061155c565b610519915060203d60201161051f575b6105118183610142565b810190611401565b386104eb565b503d610507565b610ea6565b61054b9150843d8611610551575b6105438183610142565b810190610ef4565b386104ab565b503d610539565b61057a915060203d602011610580575b6105728183610142565b810190610e91565b38610464565b503d610568565b6001600160a01b03909116815260200190565b346101bc5760203660031901126101bc576040516004356001600160a01b03168152602090f35b346101bc5760403660031901126101bc576004356001600160401b0381116101bc576105f19036906004016101c1565b60243590805160048301908184116102a25781116106225760208084840101516040519063ffffffff60e01b168152f35b90516353055dd960e11b60005260045260245260446000fd5b346101bc5760603660031901126101bc576004356001600160401b0381116101bc5761066b9036906004016101c1565b602435610677816101df565b60443590610684826101df565b61069c60ff61069561024084610dfc565b1684611416565b90600482018083116102a2576106b29085611416565b90811561070c575060ff831692838211156106f25761029e61028e86610288876106ec6106e76106e18a610e23565b92610e3f565b610e68565b90610e5b565b63b003846b60e01b60005260ff1660045260245260446000fd5b60ff90631898751d60e31b6000521660045260245260446000fd5b9181601f840112156101bc578235916001600160401b0383116101bc57602083818601950101116101bc57565b346101bc5760603660031901126101bc57600435610771816103f5565b60243561077d816103f5565b604435906001600160401b0382116101bc576020926107a36107ab933690600401610727565b929091610f94565b61ffff60405191168152f35b60206003198201126101bc57600435906001600160401b0382116101bc576101dc916004016101c1565b346101bc5761029e6103cf6107f5366107b7565b611341565b346101bc57602061082461024060ff61081d610815366101ea565b909390610dfc565b1690611416565b604051908152f35b346101bc5761024061085460ff61084d610845366101ea565b949094610dfc565b1682611416565b90600482018092116102a25760209161082491611416565b346101bc5760003660031901126101bc576000546040516001600160a01b039091168152602090f35b346101bc5760803660031901126101bc576004356108b2816103f5565b6024356108be816103f5565b6044356001600160401b0381116101bc576108dd903690600401610727565b6064359291630d0e30db60e41b6001600160e01b0319610906610901368686610185565b610eb2565b161480610a88575b80610a7f575b15610a54575050604051634df48c7360e11b81526001600160a01b03841691602090829081906109479060048301610587565b0381855afa90811561052657600091610a35575b50156109f557604051634df48c7360e11b81526000600482015290602090829060249082905afa90811561052657600091610a06575b50156109f5576000547f886680222fab5497ac86bd83975ffc3d4312e8e6837dcf7e40a054f1973585db92906109d7906001600160a01b03169260405193849384610f03565b0390a161029e60095b60405161ffff90911681529081906020820190565b630928045160e21b60005260046000fd5b610a28915060203d602011610a2e575b610a208183610142565b810190610edc565b38610991565b503d610a16565b610a4e915060203d602011610a2e57610a208183610142565b3861095b565b90919392610a6e5761029e93610a6993610f94565b6109e0565b630b09355d60e01b60005260046000fd5b50831515610914565b50600054610aa6906001600160a01b03165b6001600160a01b031690565b6001600160a01b0384161461090e565b346101bc576020610ac9610901366107b7565b6040516001600160e01b03199091168152f35b346101bc5760203660031901126101bc57600435610af9816103f5565b60008051602061157d833981519152549060ff604083901c1615916001600160401b031680159081610c3d575b6001149081610c33575b159081610c2a575b50610c195760008051602061157d83398151915280546001600160401b0319166001179055610b889082610bd757600080546001600160a01b0319166001600160a01b0392909216919091179055565b610b8e57005b60008051602061157d833981519152805460ff60401b19169055604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1005b60008051602061157d833981519152805460ff60401b1916600160401b179055600080546001600160a01b0319166001600160a01b0392909216919091179055565b63f92ee8a960e01b60005260046000fd5b90501538610b38565b303b159150610b30565b839150610b26565b346101bc5760203660031901126101bc57600460208135610c65816103f5565b60405163313ce56760e01b815292839182906001600160a01b03165afa80156105265761029e91600091610ca9575b5060405160ff90911681529081906020820190565b610cc2915060203d60201161051f576105118183610142565b38610c94565b346101bc5760403660031901126101bc57600435610ce5816103f5565b602060243591610cf4836103f5565b6040516370a0823160e01b81526001600160a01b0391821660048201529283916024918391165afa80156105265761029e91600091610d3f575b506040519081529081906020820190565b610d58915060203d602011610551576105438183610142565b38610d2e565b346101bc5760603660031901126101bc576004356001600160401b0381116101bc57610d8e9036906004016101c1565b602435906044359060008151838501908186116102a2578111610dd05760208481878601015190820380610dc6575b50604051908152f35b60031b1c82610dbd565b604492516353055dd960e11b8352600452602452fd5b634e487b7160e01b600052601160045260246000fd5b60051b90611fe060e08316921682036102a257565b60ff60049116019060ff82116102a257565b90600482018092116102a257565b90602082018092116102a257565b60010190816001116102a257565b90601f82018092116102a257565b919082018092116102a257565b908160051b91808304602014901517156102a257565b818102929181159184041417156102a257565b908160209103126101bc57516101dc816103f5565b6040513d6000823e3d90fd5b6004815110610ec2576020015190565b516353055dd960e11b600052600452600460245260446000fd5b908160209103126101bc575180151581036101bc5790565b908160209103126101bc575190565b6001600160a01b03918216815291166020820152604081019190915260600190565b91906040838203126101bc578251610f3c816103f5565b602084015190936001600160401b0382116101bc570181601f820112156101bc578051610f688161016a565b92610f766040519485610142565b818452602082840101116101bc576101dc91602080850191016102c3565b600093926001600160e01b0319610faf610901368785610185565b1663095ea7b360e01b81036111e25750610fee9192939450610fe990610fe1610a9a610fdc368985610185565b6113e1565b953691610185565b6113f1565b60405163c45a015560e01b81529093906001600160a01b038316602082600481845afa918215610526576000926111c1575b5060206040518092634df48c7360e11b825281806110418a60048301610587565b03915afa600091816111a0575b5061119b575060405163cc435bf360e01b8152602081806110728860048301610587565b03816001600160a01b0386165afa9081156105265760009161117c575b505b156109f55760006040518092631c09fa9b60e21b825281806110b68760048301610587565b03916001600160a01b03165afa90811561052657600091611158575b506001600160a01b0316801590811561114e575b5061113d57604080516001600160a01b039384168152938316602085015291169082015260608101919091527f64d4ed24bb3d6bfdd667acaeaad20f8795915514e1c67fb333b1ee94fe970d1590608090a1600190565b633790c8eb60e21b60005260046000fd5b90503014386110e6565b61117591503d806000833e61116d8183610142565b810190610f25565b50386110d2565b611195915060203d602011610a2e57610a208183610142565b3861108f565b611091565b6111ba91925060203d602011610a2e57610a208183610142565b903861104e565b6111db91925060203d602011610580576105728183610142565b9038611020565b6000546111f7906001600160a01b0316610a9a565b6001600160a01b0385161461120f575b505050505090565b632e1a7d4d60e01b14611223575b80611207565b604051634df48c7360e11b815293945091929091906001600160a01b03831690602081806112548860048301610587565b0381855afa90811561052657600091611322575b50156109f557604051634df48c7360e11b81526000600482015290602090829060249082905afa90811561052657600091611303575b50156109f5576112e96112da6107f56112f5937f11b8c8bf8a65d98dc04255ca61faa6cf1b149350336c90d12227ca1463b5970d973691610185565b60208082518301019101610ef4565b60405193849384610f03565b0390a1600a3880808061121d565b61131c915060203d602011610a2e57610a208183610142565b3861129e565b61133b915060203d602011610a2e57610a208183610142565b38611268565b805160031981018181116102a2576113638161135c81610e4d565b1015611450565b61137a8351611373836004610e5b565b111561148d565b8061139357505050604051600081526020810160405290565b604051926004601f8316801560051b908181880101956003199087010193010101905b8084106113ce5750508252601f01601f191660405290565b90926020809185518152019301906113b6565b6101dc9060ff61081d6000610e11565b6101dc9060ff61081d6020610e11565b908160209103126101bc57516101dc816101df565b919082519260208201938483116102a25784116114365701602001519150565b8390516353055dd960e11b60005260045260245260446000fd5b1561145757565b60405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606490fd5b1561149457565b60405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606490fd5b916114db8161135c81610e4d565b6114ea83516113738385610e5b565b8061150357505050604051600081526020810160405290565b60405192601f821692831560051b80858701019484860193010101905b8084106115385750508252601f01601f191660405290565b9092602080918551815201930190611520565b60ff16604d81116102a257600a0a90565b8115611566570490565b634e487b7160e01b600052601260045260246000fdfef0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081b000a";

type ERC20GuardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20GuardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Guard__factory extends ContractFactory {
  constructor(...args: ERC20GuardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ERC20Guard & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Guard__factory {
    return super.connect(runner) as ERC20Guard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20GuardInterface {
    return new Interface(_abi) as ERC20GuardInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC20Guard {
    return new Contract(address, _abi, runner) as unknown as ERC20Guard;
  }
}
