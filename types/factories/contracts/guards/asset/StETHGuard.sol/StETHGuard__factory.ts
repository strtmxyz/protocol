/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  StETHGuard,
  StETHGuardInterface,
} from "../../../../../contracts/guards/asset/StETHGuard.sol/StETHGuard";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "arrayLength",
        type: "uint256",
      },
    ],
    name: "InputIsNotArray",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "arrayIndex",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "arrayLength",
        type: "uint256",
      },
    ],
    name: "InvalidArrayPosition",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maximum",
        type: "uint256",
      },
    ],
    name: "InvalidOffset",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "PayableAmountMustBeZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dataLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredLength",
        type: "uint256",
      },
    ],
    name: "ReadingBytesOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedAsset",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedSpenderApproval",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnwrapNativeToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WrapNativeToken",
    type: "event",
  },
  {
    inputs: [],
    name: "ETH_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STETH_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "calcValue",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    name: "convert32toAddress",
    outputs: [
      {
        internalType: "address",
        name: "o",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "arrayIndex",
        type: "uint8",
      },
    ],
    name: "getArrayIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getArrayLast",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getArrayLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "getBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getInput",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getMethod",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getParams",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_WETH",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "read32",
    outputs: [
      {
        internalType: "bytes32",
        name: "o",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "read4left",
    outputs: [
      {
        internalType: "bytes4",
        name: "o",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "txGuard",
    outputs: [
      {
        internalType: "uint16",
        name: "txType",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_nativeTokenAmount",
        type: "uint256",
      },
    ],
    name: "txGuard",
    outputs: [
      {
        internalType: "uint16",
        name: "txType",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234601557611853908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c8062451d8b1461014657806309ff5c7d146101415780631053f9521461013c5780631d81e80f146101375780631eba307714610132578063293d80631461012d57806341dc16c3146101285780636179309d14610123578063689015131461011e57806382f86acc14610119578063998546e314610114578063a734f06e1461010f578063ad5c46481461010a578063bd125da414610105578063c3c6279f14610100578063c4d66de8146100fb578063cf54aaa0146100f6578063d4fac45d146100f15763db896b57146100ec57600080fd5b610c96565b610c62565b610bcf565b610a66565b610a40565b61081f565b6107f6565b6107da565b61079a565b610768565b61074f565b6106c2565b6105a9565b61052f565b610508565b610467565b610373565b610282565b61015e565b6001600160a01b03909116815260200190565b3461018d57600036600319011261018d57602060405173ae7ab96520de3a18e5e111b5eaab095312d7fe848152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b038211908210176101cb57604052565b610192565b6001600160401b0381116101cb57601f01601f191660200190565b9291926101f7826101d0565b9161020560405193846101a8565b82948184528183011161018d578281602093846000960137010152565b9080601f8301121561018d5781602061023d933591016101eb565b90565b60ff81160361018d57565b604060031982011261018d57600435906001600160401b03821161018d5761027591600401610222565b9060243561023d81610240565b3461018d576102903661024b565b6102ad60ff6102a66102a184610d34565b610d49565b1683611413565b9160048301809311610303576102c38382611413565b91821561030857508160051b918204602003610303576102e96102ef926102ff94610d93565b90611413565b6040519081529081906020820190565b0390f35b610d1e565b60ff9150631898751d60e31b6000521660045260245260446000fd5b60005b8381106103375750506000910152565b8181015183820152602001610327565b604091602082526103678151809281602086015260208686019101610324565b601f01601f1916010190565b3461018d57606036600319011261018d576004356001600160401b03811161018d576103a3903690600401610222565b6024356103af81610240565b60443590601482101561043c578160051b9180830460201490151715610303576103dd6102a160ff92610d34565b1690808201809211610303578261042a610425610400610430956102ff97611413565b9361041461041f6104198361041489610d5b565b610d93565b86611413565b95610d5b565b610d69565b906114ca565b60405191829182610347565b506377ca6c2160e11b600052600452601460245260446000fd5b6001600160a01b0381160361018d57565b3461018d57606036600319011261018d5760043561048481610456565b60046024359161049383610456565b60405163c45a015560e01b81529160443591602091849182906001600160a01b03165afa928315610503576102ff936102ef936000916104d4575b50611568565b6104f6915060203d6020116104fc575b6104ee81836101a8565b810190610dc9565b386104ce565b503d6104e4565b610dde565b3461018d57602036600319011261018d576040516004356001600160a01b03168152602090f35b3461018d57604036600319011261018d576004356001600160401b03811161018d5761055f903690600401610222565b60243590805160048301908184116103035781116105905760208084840101516040519063ffffffff60e01b168152f35b90516353055dd960e11b60005260045260245260446000fd5b3461018d57606036600319011261018d576004356001600160401b03811161018d576105d9903690600401610222565b6024356105e581610240565b604435906105f282610240565b61060a60ff6106036102a184610d34565b1684611413565b9060048201808311610303576106209085611413565b90811561067a575060ff83169283821115610660576102ff6102ef866102e98761065a61065561064f8a610d5b565b92610d77565b610da0565b90610d93565b63b003846b60e01b60005260ff1660045260245260446000fd5b60ff90631898751d60e31b6000521660045260245260446000fd5b9181601f8401121561018d578235916001600160401b03831161018d576020838186019501011161018d57565b3461018d57606036600319011261018d576004356106df81610456565b6024356106eb81610456565b604435906001600160401b03821161018d57602092610711610719933690600401610695565b929091610ecc565b61ffff60405191168152f35b602060031982011261018d57600435906001600160401b03821161018d5761023d91600401610222565b3461018d576102ff61043061076336610725565b611279565b3461018d5760206107926102a160ff61078b6107833661024b565b909390610d34565b1690611413565b604051908152f35b3461018d576102a16107c260ff6107bb6107b33661024b565b949094610d34565b1682611413565b90600482018092116103035760209161079291611413565b3461018d57600036600319011261018d57602060405160008152f35b3461018d57600036600319011261018d576000546040516001600160a01b039091168152602090f35b3461018d57608036600319011261018d5760043561083c81610456565b60243561084881610456565b6044356001600160401b03811161018d57610867903690600401610695565b6064359291630d0e30db60e41b6001600160e01b031961089061088b3686866101eb565b610dea565b161480610a12575b80610a09575b156109de575050604051634df48c7360e11b81526001600160a01b03841691602090829081906108d1906004830161014b565b0381855afa908115610503576000916109bf575b501561097f57604051634df48c7360e11b81526000600482015290602090829060249082905afa90811561050357600091610990575b501561097f576000547f886680222fab5497ac86bd83975ffc3d4312e8e6837dcf7e40a054f1973585db9290610961906001600160a01b03169260405193849384610e3b565b0390a16102ff60095b60405161ffff90911681529081906020820190565b630928045160e21b60005260046000fd5b6109b2915060203d6020116109b8575b6109aa81836101a8565b810190610e14565b3861091b565b503d6109a0565b6109d8915060203d6020116109b8576109aa81836101a8565b386108e5565b909193926109f8576102ff936109f393610ecc565b61096a565b630b09355d60e01b60005260046000fd5b5083151561089e565b50600054610a30906001600160a01b03165b6001600160a01b031690565b6001600160a01b03841614610898565b3461018d576020610a5361088b36610725565b6040516001600160e01b03199091168152f35b3461018d57602036600319011261018d57600435610a8381610456565b600080516020611827833981519152549060ff604083901c1615916001600160401b031680159081610bc7575b6001149081610bbd575b159081610bb4575b50610ba35760008051602061182783398151915280546001600160401b0319166001179055610b129082610b6157600080546001600160a01b0319166001600160a01b0392909216919091179055565b610b1857005b600080516020611827833981519152805460ff60401b19169055604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1005b600080516020611827833981519152805460ff60401b1916600160401b179055600080546001600160a01b0319166001600160a01b0392909216919091179055565b63f92ee8a960e01b60005260046000fd5b90501538610ac2565b303b159150610aba565b839150610ab0565b3461018d57602036600319011261018d57600460208135610bef81610456565b60405163313ce56760e01b815292839182906001600160a01b03165afa8015610503576102ff91600091610c33575b5060405160ff90911681529081906020820190565b610c55915060203d602011610c5b575b610c4d81836101a8565b810190611339565b38610c1e565b503d610c43565b3461018d57604036600319011261018d576020610792600435610c8481610456565b60243590610c9182610456565b61134e565b3461018d57606036600319011261018d576004356001600160401b03811161018d57610cc6903690600401610222565b60243590604435906000815183850190818611610303578111610d085760208481878601015190820380610cfe575b50604051908152f35b60031b1c82610cf5565b604492516353055dd960e11b8352600452602452fd5b634e487b7160e01b600052601160045260246000fd5b60051b90611fe060e083169216820361030357565b60ff60049116019060ff821161030357565b906004820180921161030357565b906020820180921161030357565b600101908160011161030357565b90601f820180921161030357565b9190820180921161030357565b908160051b918083046020149015171561030357565b8181029291811591840414171561030357565b9081602091031261018d575161023d81610456565b6040513d6000823e3d90fd5b6004815110610dfa576020015190565b516353055dd960e11b600052600452600460245260446000fd5b9081602091031261018d5751801515810361018d5790565b9081602091031261018d575190565b6001600160a01b03918216815291166020820152604081019190915260600190565b919060408382031261018d578251610e7481610456565b602084015190936001600160401b03821161018d570181601f8201121561018d578051610ea0816101d0565b92610eae60405194856101a8565b8184526020828401011161018d5761023d9160208085019101610324565b600093926001600160e01b0319610ee761088b3687856101eb565b1663095ea7b360e01b810361111a5750610f269192939450610f2190610f19610a24610f143689856101eb565b611319565b9536916101eb565b611329565b60405163c45a015560e01b81529093906001600160a01b038316602082600481845afa918215610503576000926110f9575b5060206040518092634df48c7360e11b82528180610f798a6004830161014b565b03915afa600091816110d8575b506110d3575060405163cc435bf360e01b815260208180610faa886004830161014b565b03816001600160a01b0386165afa908115610503576000916110b4575b505b1561097f5760006040518092631c09fa9b60e21b82528180610fee876004830161014b565b03916001600160a01b03165afa90811561050357600091611090575b506001600160a01b03168015908115611086575b5061107557604080516001600160a01b039384168152938316602085015291169082015260608101919091527f64d4ed24bb3d6bfdd667acaeaad20f8795915514e1c67fb333b1ee94fe970d1590608090a1600190565b633790c8eb60e21b60005260046000fd5b905030143861101e565b6110ad91503d806000833e6110a581836101a8565b810190610e5d565b503861100a565b6110cd915060203d6020116109b8576109aa81836101a8565b38610fc7565b610fc9565b6110f291925060203d6020116109b8576109aa81836101a8565b9038610f86565b61111391925060203d6020116104fc576104ee81836101a8565b9038610f58565b60005461112f906001600160a01b0316610a24565b6001600160a01b03851614611147575b505050505090565b632e1a7d4d60e01b1461115b575b8061113f565b604051634df48c7360e11b815293945091929091906001600160a01b038316906020818061118c886004830161014b565b0381855afa9081156105035760009161125a575b501561097f57604051634df48c7360e11b81526000600482015290602090829060249082905afa9081156105035760009161123b575b501561097f5761122161121261076361122d937f11b8c8bf8a65d98dc04255ca61faa6cf1b149350336c90d12227ca1463b5970d9736916101eb565b60208082518301019101610e2c565b60405193849384610e3b565b0390a1600a38808080611155565b611254915060203d6020116109b8576109aa81836101a8565b386111d6565b611273915060203d6020116109b8576109aa81836101a8565b386111a0565b805160031981018181116103035761129b8161129481610d85565b101561144d565b6112b283516112ab836004610d93565b111561148a565b806112cb57505050604051600081526020810160405290565b604051926004601f8316801560051b908181880101956003199087010193010101905b8084106113065750508252601f01601f191660405290565b90926020809185518152019301906112ee565b61023d9060ff61078b6000610d49565b61023d9060ff61078b6020610d49565b9081602091031261018d575161023d81610240565b6001600160a01b039091169060209073ae7ab96520de3a18e5e111b5eaab095312d7fe8483146113da576040516370a0823160e01b81526001600160a01b03909116600482015291829060249082905afa908115610503576000916113b1575090565b61023d915060203d6020116113d3575b6113cb81836101a8565b810190610e2c565b503d6113c1565b6040516370a0823160e01b81526001600160a01b03909116600482015291829060249082905afa908115610503576000916113b1575090565b919082519260208201938483116103035784116114335701602001519150565b8390516353055dd960e11b60005260045260245260446000fd5b1561145457565b60405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606490fd5b1561149157565b60405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606490fd5b916114d88161129481610d85565b6114e783516112ab8385610d93565b8061150057505050604051600081526020810160405290565b60405192601f821692831560051b80858701019484860193010101905b8084106115355750508252601f01601f191660405290565b909260208091855181520193019061151d565b8115611552570490565b634e487b7160e01b600052601260045260246000fd5b919073ae7ab96520de3a18e5e111b5eaab095312d7fe83196001600160a01b0382160161160f5750611599906116db565b60405163b3596f0760e01b8152600060048201529091602090829060249082906001600160a01b03165afa80156105035761023d926115e0926000926115ee575b50610db6565b670de0b6b3a7640000900490565b61160891925060203d6020116113d3576113cb81836101a8565b90386115da565b90916020604051809263b3596f0760e01b82528180611631876004830161014b565b03916001600160a01b03165afa9081156105035760049360209261165c926000916116be5750610db6565b60405163313ce56760e01b815293909284919082906001600160a01b03165afa9182156105035761023d926116999160009161169f575b50611815565b90611548565b6116b8915060203d602011610c5b57610c4d81836101a8565b38611693565b6116d59150843d86116113d3576113cb81836101a8565b386115da565b604051630f451f7160e31b81526004810182905260208160248173ae7ab96520de3a18e5e111b5eaab095312d7fe845afa600091816117f4575b506117ef5750604051636a80179760e11b815260208160048173ae7ab96520de3a18e5e111b5eaab095312d7fe845afa600091816117ce575b50611757575090565b604051631be7ed6560e11b815260208160048173ae7ab96520de3a18e5e111b5eaab095312d7fe845afa600091816117ad575b50611795575b505090565b8115611790576117a89061023d93610db6565b611548565b6117c791925060203d6020116113d3576113cb81836101a8565b903861178a565b6117e891925060203d6020116113d3576113cb81836101a8565b903861174e565b905090565b61180e91925060203d6020116113d3576113cb81836101a8565b9038611715565b60ff16604d811161030357600a0a9056fef0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081b000a";

type StETHGuardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StETHGuardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StETHGuard__factory extends ContractFactory {
  constructor(...args: StETHGuardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StETHGuard & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StETHGuard__factory {
    return super.connect(runner) as StETHGuard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StETHGuardInterface {
    return new Interface(_abi) as StETHGuardInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): StETHGuard {
    return new Contract(address, _abi, runner) as unknown as StETHGuard;
  }
}
