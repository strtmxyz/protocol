/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  AmbientAssetGuard,
  AmbientAssetGuardInterface,
} from "../../../../contracts/guards/asset/AmbientAssetGuard";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "arrayLength",
        type: "uint256",
      },
    ],
    name: "InputIsNotArray",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "arrayIndex",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "arrayLength",
        type: "uint256",
      },
    ],
    name: "InvalidArrayPosition",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEndpointAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maximum",
        type: "uint256",
      },
    ],
    name: "InvalidOffset",
    type: "error",
  },
  {
    inputs: [],
    name: "NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dataLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredLength",
        type: "uint256",
      },
    ],
    name: "ReadingBytesOutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedAsset",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnwrapNativeToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WrapNativeToken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "calcValue",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    name: "convert32toAddress",
    outputs: [
      {
        internalType: "address",
        name: "o",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "crocQueryEndpoint",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "arrayIndex",
        type: "uint8",
      },
    ],
    name: "getArrayIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getArrayLast",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getArrayLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "getBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getInput",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getMethod",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getParams",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "baseAsset",
        type: "address",
      },
      {
        internalType: "address",
        name: "quoteAsset",
        type: "address",
      },
      {
        internalType: "int24",
        name: "bidTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "askTick",
        type: "int24",
      },
    ],
    name: "getRangeTokens",
    outputs: [
      {
        internalType: "uint128",
        name: "liq",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "baseQty",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "quoteQty",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_crocQueryEndpoint",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "poolConfigs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "read32",
    outputs: [
      {
        internalType: "bytes32",
        name: "o",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "read4left",
    outputs: [
      {
        internalType: "bytes4",
        name: "o",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "baseAsset",
        type: "address",
      },
      {
        internalType: "address",
        name: "quoteAsset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "poolIdx",
        type: "uint256",
      },
    ],
    name: "setPoolConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "txGuard",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "txGuard",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234601557610f48908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806309ff5c7d146101575780631053f952146101525780631d81e80f1461014d5780631eba30771461014857806322cc808314610143578063293d80631461013e57806341dc16c3146101395780636179309d1461013457806366caaa1a1461012f578063689015131461012a57806382f86acc14610125578063998546e314610120578063b27315f31461011b578063bd125da414610116578063c3c6279f14610111578063c4d66de81461010c578063cf54aaa014610107578063d4fac45d14610102578063d91e4cc0146100fd5763db896b57146100f857600080fd5b610c43565b610c1a565b610bec565b610bc7565b610a9c565b610a52565b610a39565b6108cd565b61086d565b61083b565b610779565b61071c565b6106c7565b6105b6565b61053c565b6104f0565b6104b2565b610496565b61033b565b610250565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b0382119082101761019557604052565b61015c565b81601f820112156101f0578035906001600160401b03821161019557604051926101ce601f8401601f191660200185610172565b828452602083830101116101f057816000926020809301838601378301015290565b600080fd5b6024359060ff821682036101f057565b6044359060ff821682036101f057565b60406003198201126101f057600435906001600160401b0382116101f05761023f9160040161019a565b9060243560ff811681036101f05790565b346101f05761025e36610215565b61027b60ff61027461026f84610ce1565b610cf6565b1683610de6565b91600483018093116102d1576102918382610de6565b9182156102d657508160051b9182046020036102d1576102b76102bd926102cd94610d40565b90610de6565b6040519081529081906020820190565b0390f35b610ccb565b60ff9150631898751d60e31b6000521660045260245260446000fd5b91909160208152825180602083015260005b818110610325575060409293506000838284010152601f8019910116010190565b8060208092870101516040828601015201610304565b346101f05760603660031901126101f0576004356001600160401b0381116101f05761036b90369060040161019a565b6103736101f5565b604435906014821015610400578160051b91808304602014901517156102d1576103a161026f60ff92610ce1565b16908082018092116102d157826103ee6103e96103c46103f4956102cd97610de6565b936103d86103e36103dd836103d889610d08565b610d40565b86610de6565b95610d08565b610d16565b90610e9d565b604051918291826102f2565b506377ca6c2160e11b600052600452601460245260446000fd5b600435906001600160a01b03821682036101f057565b602435906001600160a01b03821682036101f057565b604435906001600160a01b03821682036101f057565b60609060031901126101f0576004356001600160a01b03811681036101f057906024356001600160a01b03811681036101f0579060443590565b346101f0576104a43661045c565b505050602060405160008152f35b346101f05760203660031901126101f0576040516004356001600160a01b03168152602090f35b9060018060a01b0316600052602052604060002090565b346101f05760403660031901126101f057602061053361050e61041a565b610516610430565b6001600160a01b03909116600090815260018452604090206104d9565b54604051908152f35b346101f05760403660031901126101f0576004356001600160401b0381116101f05761056c90369060040161019a565b60243590805160048301908184116102d157811161059d5760208084840101516040519063ffffffff60e01b168152f35b90516353055dd960e11b60005260045260245260446000fd5b346101f05760603660031901126101f0576004356001600160401b0381116101f0576105e690369060040161019a565b6105ee6101f5565b6105f6610205565b9061060f60ff61060861026f84610ce1565b1684610de6565b90600482018083116102d1576106259085610de6565b90811561067f575060ff83169283821115610665576102cd6102bd866102b78761065f61065a6106548a610d08565b92610d24565b610d4d565b90610d40565b63b003846b60e01b60005260ff1660045260245260446000fd5b60ff90631898751d60e31b6000521660045260245260446000fd5b9181601f840112156101f0578235916001600160401b0383116101f057602083818601950101116101f057565b346101f05760603660031901126101f0576106e061041a565b506106e9610430565b506044356001600160401b0381116101f05761070990369060040161069a565b505063d623472560e01b60005260046000fd5b346101f05761074961072d3661045c565b929160018060a01b0316600052600160205260406000206104d9565b55005b60206003198201126101f057600435906001600160401b0382116101f0576107769160040161019a565b90565b346101f0576107873661074c565b80519060031982018281116102d1576107aa816107a381610d32565b1015610e20565b6107c182516107ba836004610d40565b1115610e5d565b806107e6575050506102cd6040516000815260208101604052604051918291826102f2565b604051601f8216928301831560051b90810160040194919384010191908201600319015b80831061082857508252601f01601f19166040526102cd91506103f4565b845183526020948501949092019161080a565b346101f057602061086561026f60ff61085e61085636610215565b939093610ce1565b1690610de6565b604051908152f35b346101f05761026f61089560ff61088e61088636610215565b949094610ce1565b1682610de6565b90600482018092116102d15760209161086591610de6565b606435908160020b82036101f057565b608435908160020b82036101f057565b346101f05760a03660031901126101f0576108e661041a565b6108ee610430565b6108f6610446565b6108fe6108ad565b6109066108bd565b9260018060a01b03811660005260016020526109268360406000206104d9565b54948515610a28576000546060956109af916109589061094c906001600160a01b031681565b6001600160a01b031690565b60405163d7fd8d0f60e01b81526001600160a01b03948516600482015294841660248601529590921660448401526064830196909652600292830b608483015290910b60a4820152928391908290819060c4820190565b03915afa8015610a23576000906000926000916109ec575b50604080516001600160801b0393841681529383166020850152911690820152606090f35b90506102cd9250610a15915060603d606011610a1c575b610a0d8183610172565b810190610d77565b90926109c7565b503d610a03565b610da4565b630928045160e21b60005260046000fd5b346101f05760803660031901126101f0576106e061041a565b346101f057610a603661074c565b60006004825110610a84576020828101516040516001600160e01b03199091168152f35b604491516353055dd960e11b82526004526004602452fd5b346101f05760203660031901126101f057610ab561041a565b600080516020610f1c833981519152549060ff604083901c1615916001600160401b031680159081610bbf575b6001149081610bb5575b159081610bac575b50610b9b57600080516020610f1c83398151915280546001600160401b0319166001179055610b279082610b7657610db0565b610b2d57005b600080516020610f1c833981519152805460ff60401b19169055604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1005b600080516020610f1c833981519152805460ff60401b1916600160401b179055610db0565b63f92ee8a960e01b60005260046000fd5b90501538610af4565b303b159150610aec565b839150610ae2565b346101f05760203660031901126101f057610be061041a565b50602060405160128152f35b346101f05760403660031901126101f057610c0561041a565b50610c0e610430565b50602060405160008152f35b346101f05760003660031901126101f0576000546040516001600160a01b039091168152602090f35b346101f05760603660031901126101f0576004356001600160401b0381116101f057610c7390369060040161019a565b602435906044359060008151838501908186116102d1578111610cb55760208481878601015190820380610cab575b50604051908152f35b60031b1c82610ca2565b604492516353055dd960e11b8352600452602452fd5b634e487b7160e01b600052601160045260246000fd5b60051b90611fe060e08316921682036102d157565b60ff60049116019060ff82116102d157565b90600482018092116102d157565b90602082018092116102d157565b60010190816001116102d157565b90601f82018092116102d157565b919082018092116102d157565b908160051b91808304602014901517156102d157565b51906001600160801b03821682036101f057565b908160609103126101f057610d8b81610d63565b916107766040610d9d60208501610d63565b9301610d63565b6040513d6000823e3d90fd5b6001600160a01b03168015610dd557600080546001600160a01b031916919091179055565b6333eadcbb60e11b60005260046000fd5b919082519260208201938483116102d1578411610e065701602001519150565b8390516353055dd960e11b60005260045260245260446000fd5b15610e2757565b60405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606490fd5b15610e6457565b60405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606490fd5b91610eab816107a381610d32565b610eba83516107ba8385610d40565b80610ed357505050604051600081526020810160405290565b60405192601f821692831560051b80858701019484860193010101905b808410610f085750508252601f01601f191660405290565b9092602080918551815201930190610ef056fef0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081b000a";

type AmbientAssetGuardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AmbientAssetGuardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AmbientAssetGuard__factory extends ContractFactory {
  constructor(...args: AmbientAssetGuardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AmbientAssetGuard & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AmbientAssetGuard__factory {
    return super.connect(runner) as AmbientAssetGuard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AmbientAssetGuardInterface {
    return new Interface(_abi) as AmbientAssetGuardInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AmbientAssetGuard {
    return new Contract(address, _abi, runner) as unknown as AmbientAssetGuard;
  }
}
