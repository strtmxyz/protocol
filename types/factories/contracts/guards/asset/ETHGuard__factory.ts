/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  ETHGuard,
  ETHGuardInterface,
} from "../../../../contracts/guards/asset/ETHGuard";

const _abi = [
  {
    inputs: [],
    name: "ETHAmountMustBeGreaterThanZero",
    type: "error",
  },
  {
    inputs: [],
    name: "ETHGuardOnlyHandlesNativeETH",
    type: "error",
  },
  {
    inputs: [],
    name: "ETHGuardOnlySupportsNativeETH",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "arrayLength",
        type: "uint256",
      },
    ],
    name: "InputIsNotArray",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "arrayIndex",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "arrayLength",
        type: "uint256",
      },
    ],
    name: "InvalidArrayPosition",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidETHPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maximum",
        type: "uint256",
      },
    ],
    name: "InvalidOffset",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTargetAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidWETHAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dataLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "requiredLength",
        type: "uint256",
      },
    ],
    name: "ReadingBytesOutOfBounds",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnwrapNativeToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WrapNativeToken",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "calcValue",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    name: "convert32toAddress",
    outputs: [
      {
        internalType: "address",
        name: "o",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "arrayIndex",
        type: "uint8",
      },
    ],
    name: "getArrayIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getArrayLast",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getArrayLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "getBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getInput",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getMethod",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getParams",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "read32",
    outputs: [
      {
        internalType: "bytes32",
        name: "o",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "read4left",
    outputs: [
      {
        internalType: "bytes4",
        name: "o",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "txGuard",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_nativeTokenAmount",
        type: "uint256",
      },
    ],
    name: "txGuard",
    outputs: [
      {
        internalType: "uint16",
        name: "txType",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234601557610e6a908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806309ff5c7d146101275780631053f952146101225780631d81e80f1461011d5780631eba307714610118578063293d80631461011357806341dc16c31461010e5780636179309d14610109578063689015131461010457806382f86acc146100ff578063998546e3146100fa578063ad5c4648146100f5578063bd125da4146100f0578063c3c6279f146100eb578063c4d66de8146100e6578063cf54aaa0146100e1578063d4fac45d146100dc5763db896b57146100d757600080fd5b610ae3565b610aa1565b610a6b565b61093c565b6108f2565b610865565b61083c565b6107fc565b6107ca565b610708565b610682565b610571565b6104f7565b6104d0565b6103fb565b61030b565b610220565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b0382119082101761016557604052565b61012c565b81601f820112156101c0578035906001600160401b038211610165576040519261019e601f8401601f191660200185610142565b828452602083830101116101c057816000926020809301838601378301015290565b600080fd5b6024359060ff821682036101c057565b6044359060ff821682036101c057565b60406003198201126101c057600435906001600160401b0382116101c05761020f9160040161016a565b9060243560ff811681036101c05790565b346101c05761022e366101e5565b61024b60ff61024461023f84610b81565b610b96565b1683610c57565b91600483018093116102a1576102618382610c57565b9182156102a657508160051b9182046020036102a15761028761028d9261029d94610be0565b90610c57565b6040519081529081906020820190565b0390f35b610b6b565b60ff9150631898751d60e31b6000521660045260245260446000fd5b91909160208152825180602083015260005b8181106102f5575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016102d4565b346101c05760603660031901126101c0576004356001600160401b0381116101c05761033b90369060040161016a565b6103436101c5565b6044359060148210156103d0578160051b91808304602014901517156102a15761037161023f60ff92610b81565b16908082018092116102a157826103be6103b96103946103c49561029d97610c57565b936103a86103b36103ad836103a889610ba8565b610be0565b86610c57565b95610ba8565b610bb6565b90610d0e565b604051918291826102c2565b506377ca6c2160e11b600052600452601460245260446000fd5b6001600160a01b038116036101c057565b346101c05760603660031901126101c057600435610418816103ea565b60243590610425826103ea565b604435916001600160a01b03166104bf5760405163c45a015560e01b815290602090829060049082906001600160a01b03165afa9081156104ba57600091610475575b61029d61028d8484610d9b565b90506020813d6020116104b2575b8161049060209383610142565b810103126101c05761029d9161028d91516104aa816103ea565b915091610468565b3d9150610483565b610c16565b63194928fd60e01b60005260046000fd5b346101c05760203660031901126101c0576040516004356001600160a01b03168152602090f35b346101c05760403660031901126101c0576004356001600160401b0381116101c05761052790369060040161016a565b60243590805160048301908184116102a15781116105585760208084840101516040519063ffffffff60e01b168152f35b90516353055dd960e11b60005260045260245260446000fd5b346101c05760603660031901126101c0576004356001600160401b0381116101c0576105a190369060040161016a565b6105a96101c5565b6105b16101d5565b906105ca60ff6105c361023f84610b81565b1684610c57565b90600482018083116102a1576105e09085610c57565b90811561063a575060ff831692838211156106205761029d61028d866102878761061a61061561060f8a610ba8565b92610bc4565b610bed565b90610be0565b63b003846b60e01b60005260ff1660045260245260446000fd5b60ff90631898751d60e31b6000521660045260245260446000fd5b9181601f840112156101c0578235916001600160401b0383116101c057602083818601950101116101c057565b346101c05760603660031901126101c05761069e6004356103ea565b6106a96024356103ea565b6044356001600160401b0381116101c0576106c8903690600401610655565b5050630f777b0360e41b60005260046000fd5b60206003198201126101c057600435906001600160401b0382116101c0576107059160040161016a565b90565b346101c057610716366106db565b80519060031982018281116102a1576107398161073281610bd2565b1015610c91565b6107508251610749836004610be0565b1115610cce565b806107755750505061029d6040516000815260208101604052604051918291826102c2565b604051601f8216928301831560051b90810160040194919384010191908201600319015b8083106107b757508252601f01601f191660405261029d91506103c4565b8451835260209485019490920191610799565b346101c05760206107f461023f60ff6107ed6107e5366101e5565b939093610b81565b1690610c57565b604051908152f35b346101c05761023f61082460ff61081d610815366101e5565b949094610b81565b1682610c57565b90600482018092116102a1576020916107f491610c57565b346101c05760003660031901126101c0576000546040516001600160a01b039091168152602090f35b346101c05760803660031901126101c0576108816004356103ea565b60243561088d816103ea565b6044356001600160401b0381116101c0576108ac903690600401610655565b5050606435156108e1576001600160a01b0316156108d05760405160018152602090f35b633c6924b360e21b60005260046000fd5b631920581b60e01b60005260046000fd5b346101c057610900366106db565b60006004825110610924576020828101516040516001600160e01b03199091168152f35b604491516353055dd960e11b82526004526004602452fd5b346101c05760203660031901126101c057600435610959816103ea565b600080516020610e3e833981519152549060ff604083901c1615916001600160401b031680159081610a63575b6001149081610a59575b159081610a50575b50610a3f57600080516020610e3e83398151915280546001600160401b03191660011790556109cb9082610a1a57610c22565b6109d157005b600080516020610e3e833981519152805460ff60401b19169055604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1005b600080516020610e3e833981519152805460ff60401b1916600160401b179055610c22565b63f92ee8a960e01b60005260046000fd5b90501538610998565b303b159150610990565b839150610986565b346101c05760203660031901126101c057600435610a88816103ea565b6001600160a01b03166104bf5760405160128152602090f35b346101c05760403660031901126101c057600435610abe816103ea565b602435610aca816103ea565b6001600160a01b03166104bf5760209031604051908152f35b346101c05760603660031901126101c0576004356001600160401b0381116101c057610b1390369060040161016a565b602435906044359060008151838501908186116102a1578111610b555760208481878601015190820380610b4b575b50604051908152f35b60031b1c82610b42565b604492516353055dd960e11b8352600452602452fd5b634e487b7160e01b600052601160045260246000fd5b60051b90611fe060e08316921682036102a157565b60ff60049116019060ff82116102a157565b90600482018092116102a157565b90602082018092116102a157565b60010190816001116102a157565b90601f82018092116102a157565b919082018092116102a157565b908160051b91808304602014901517156102a157565b818102929181159184041417156102a157565b6040513d6000823e3d90fd5b6001600160a01b03168015610c4757600080546001600160a01b031916919091179055565b6212c43360e51b60005260046000fd5b919082519260208201938483116102a1578411610c775701602001519150565b8390516353055dd960e11b60005260045260245260446000fd5b15610c9857565b60405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606490fd5b15610cd557565b60405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606490fd5b91610d1c8161073281610bd2565b610d2b83516107498385610be0565b80610d4457505050604051600081526020810160405290565b60405192601f821692831560051b80858701019484860193010101905b808410610d795750508252601f01601f191660405290565b9092602080918551815201930190610d61565b908160209103126101c0575190565b60005460405163b3596f0760e01b81526001600160a01b039182166004820152929160209184916024918391165afa9182156104ba57600092610e0c575b508115610dfb5761070591610ded91610c03565b670de0b6b3a7640000900490565b635a4d2e9d60e11b60005260046000fd5b610e2f91925060203d602011610e36575b610e278183610142565b810190610d8c565b9038610dd9565b503d610e1d56fef0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081b000a";

type ETHGuardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ETHGuardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ETHGuard__factory extends ContractFactory {
  constructor(...args: ETHGuardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ETHGuard & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ETHGuard__factory {
    return super.connect(runner) as ETHGuard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ETHGuardInterface {
    return new Interface(_abi) as ETHGuardInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ETHGuard {
    return new Contract(address, _abi, runner) as unknown as ETHGuard;
  }
}
