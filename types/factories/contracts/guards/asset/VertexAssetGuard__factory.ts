/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  VertexAssetGuard,
  VertexAssetGuardInterface,
} from "../../../../contracts/guards/asset/VertexAssetGuard";

const _abi = [
  {
    inputs: [],
    name: "InputIsNotArray",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidArrayPosition",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOffset",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "ReadingBytesOutOfBounds",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ERC20Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnwrapNativeToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WrapNativeToken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "calcValue",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    name: "convert32toAddress",
    outputs: [
      {
        internalType: "address",
        name: "o",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "arrayIndex",
        type: "uint8",
      },
    ],
    name: "getArrayIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getArrayLast",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getArrayLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "getBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "inputNum",
        type: "uint8",
      },
    ],
    name: "getInput",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getMethod",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "getParams",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "bytes12",
        name: "suffix",
        type: "bytes12",
      },
    ],
    name: "getSubaccountId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "read32",
    outputs: [
      {
        internalType: "bytes32",
        name: "o",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
    ],
    name: "read4left",
    outputs: [
      {
        internalType: "bytes4",
        name: "o",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "txGuard",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "txGuard",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234601557611053908161001b8239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806309ff5c7d146101275780631053f952146101225780631d81e80f1461011d5780631eba307714610118578063293d80631461011357806339902fc41461010e57806341dc16c3146101095780636179309d1461010457806368901513146100ff5780638129fc1c146100fa57806382f86acc146100f5578063998546e3146100f0578063bd125da4146100eb578063c3c6279f146100e6578063cf54aaa0146100e1578063d4fac45d146100dc5763db896b57146100d757600080fd5b610b4c565b610b04565b610adf565b610a9e565b6109f1565b6109c0565b610996565b61087c565b6107ba565b6106e1565b6105f8565b6105b6565b610544565b61051d565b61040d565b610304565b610220565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b0382119082101761016557604052565b61012c565b81601f820112156101c0578035906001600160401b038211610165576040519261019e601f8401601f191660200185610142565b828452602083830101116101c057816000926020809301838601378301015290565b600080fd5b6024359060ff821682036101c057565b6044359060ff821682036101c057565b60406003198201126101c057600435906001600160401b0382116101c05761020f9160040161016a565b9060243560ff811681036101c05790565b346101c05761024161024d60ff610246610239366101e5565b949094610bd3565b610be8565b1682610cc6565b9060048201918281116102a5576102648383610cc6565b80156102aa578060051b9081046020036102a55760049101018092116102a5576102a19161029191610cc6565b6040519081529081906020820190565b0390f35b610bbd565b631754cda560e31b60005260046000fd5b91909160208152825180602083015260005b8181106102ee575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016102cd565b346101c05760603660031901126101c0576004356001600160401b0381116101c05761033490369060040161016a565b61033c6101c5565b906044359160148310156103d1578260051b92808404602014901517156102a55761036b61024160ff92610bd3565b168281018091116102a5576103809082610cc6565b60048101918282116102a5576103bf6103ba856103b56103af6103a96102a1996103c599610c24565b86610cc6565b95610bfa565b610c24565b610c08565b90610d5f565b604051918291826102bb565b62ed0ab960e11b60005260046000fd5b600435906001600160a01b03821682036101c057565b602435906001600160a01b03821682036101c057565b346101c05760603660031901126101c0576104266103e1565b61042e6103f7565b600091906001600160a01b0316610443610e8f565b9160005b8351811015610512576104a160206104796104736104658589610c8d565b516001600160a01b03191690565b85610f43565b6040516388b6496f60e01b815260048101919091526002602482015291829081906044820190565b0381875afa90811561050d576000916104df575b50600f0b600081136104cb575b50600101610447565b6104d89060019296610c24565b94906104c2565b610500915060203d8111610506575b6104f88183610142565b810190610ca1565b386104b5565b503d6104ee565b610cba565b604051858152602090f35b346101c05760203660031901126101c0576040516004356001600160a01b03168152602090f35b346101c05760403660031901126101c0576004356001600160401b0381116101c05761057490369060040161016a565b60243590805160048301908184116102a557106105a557016020908101516040516001600160e01b03199091168152f35b631853ab7360e21b60005260046000fd5b346101c05760403660031901126101c0576105cf6103e1565b602435906001600160a01b0319821682036101c0576020916105f091610f43565b604051908152f35b346101c05760603660031901126101c0576004356001600160401b0381116101c05761062890369060040161016a565b6106306101c5565b61065060ff6106496102416106436101d5565b94610bd3565b1683610cc6565b90600482018092116102a5576106668284610cc6565b9081156102aa5760ff16809111156106a35760010191826001116102a55761069d610291926106976102a195610c31565b90610c24565b90610cc6565b633135ee2560e21b60005260046000fd5b9181601f840112156101c0578235916001600160401b0383116101c057602083818601950101116101c057565b346101c05760603660031901126101c0576106fa6103e1565b506107036103f7565b506044356001600160401b0381116101c0576107239036906004016106b4565b505060405162461bcd60e51b815260206004820152603a60248201527f566572746578417373657447756172643a20446972656374207472616e7361636044820152791d1a5bdb8819dd585c99081b9bdd081a5b5c1b195b595b9d195960321b6064820152608490fd5b60206003198201126101c057600435906001600160401b0382116101c0576107b79160040161016a565b90565b346101c0576107c83661078d565b80519060031982018281116102a5576107eb816107e481610c16565b1015610ce2565b61080282516107fb836004610c24565b1115610d1f565b80610827575050506102a16040516000815260208101604052604051918291826102bb565b604051601f8216928301831560051b90810160040194919384010191908201600319015b80831061086957508252601f01601f19166040526102a191506103c5565b845183526020948501949092019161084b565b346101c05760003660031901126101c0576000805160206110278339815191525460ff604082901c1615906001600160401b03168015908161098e575b6001149081610984575b15908161097b575b5061096a5760008051602061102783398151915280546001600160401b031916600117905580610945575b6108fc57005b600080516020611027833981519152805460ff60401b19169055604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1005b600080516020611027833981519152805460ff60401b1916600160401b1790556108f6565b63f92ee8a960e01b60005260046000fd5b905015386108cb565b303b1591506108c3565b8291506108b9565b346101c05760206105f061024160ff6109b96109b1366101e5565b939093610bd3565b1690610cc6565b346101c0576102416109d960ff610246610239366101e5565b90600482018092116102a5576020916105f091610cc6565b346101c05760803660031901126101c057610a0a6103e1565b50610a136103f7565b506044356001600160401b0381116101c057610a339036906004016106b4565b505060405162461bcd60e51b815260206004820152603b60248201527f566572746578417373657447756172643a2050617961626c65207472616e736160448201527a18dd1a5bdb8819dd585c99081b9bdd081a5b5c1b195b595b9d1959602a1b6064820152608490fd5b346101c057610aac3661078d565b60006004825110610ad0576020828101516040516001600160e01b03199091168152f35b631853ab7360e21b8152600490fd5b346101c05760203660031901126101c057610af86103e1565b50602060405160008152f35b346101c05760403660031901126101c057610b2e610b206103e1565b610b286103f7565b90610f9c565b15610b4357602060015b60ff60405191168152f35b60206000610b38565b346101c05760603660031901126101c0576004356001600160401b0381116101c057610b7c90369060040161016a565b602435906044359060008151838501908186116102a55710610ad05750602092839101015190820380610bb3575b50604051908152f35b60031b1c38610baa565b634e487b7160e01b600052601160045260246000fd5b60051b90611fe060e08316921682036102a557565b60ff60049116019060ff82116102a557565b90600482018092116102a557565b90602082018092116102a557565b90601f82018092116102a557565b919082018092116102a557565b908160051b91808304602014901517156102a557565b805160011015610c575760400190565b634e487b7160e01b600052603260045260246000fd5b805160021015610c575760600190565b805160031015610c575760800190565b8051821015610c575760209160051b010190565b908160209103126101c0575180600f0b81036101c05790565b6040513d6000823e3d90fd5b90815160208201908183116102a557106105a557016020015190565b15610ce957565b60405162461bcd60e51b815260206004820152600e60248201526d736c6963655f6f766572666c6f7760901b6044820152606490fd5b15610d2657565b60405162461bcd60e51b8152602060048201526011602482015270736c6963655f6f75744f66426f756e647360781b6044820152606490fd5b91610d6d816107e481610c16565b610d7c83516107fb8385610c24565b80610d9557505050604051600081526020810160405290565b60405192601f821692831560051b80858701019484860193010101905b808410610dca5750508252601f01601f191660405290565b9092602080918551815201930190610db2565b80516020909101516001600160a01b03198116929190600c8210610dff575050565b6001600160a01b0319600c9290920360031b82901b16169150565b60405190610e29604083610142565b600982526864656661756c745f3160b81b6020830152565b60405190610e50604083610142565b60098252683232b330bab63a2f9960b91b6020830152565b60405190610e77604083610142565b600982526864656661756c745f3360b81b6020830152565b604051610e9d60a082610142565b600481526080366020830137610ed3604051610eba604082610142565b6007815266191959985d5b1d60ca1b6020820152610ddd565b815115610c57576001600160a01b0319166020820152610f15610efc610ef7610e1a565b610ddd565b610f0583610c47565b6001600160a01b03199091169052565b610f2c610f23610ef7610e41565b610f0583610c6d565b6107b7610f3a610ef7610e68565b610f0583610c7d565b6040805160609290921b6001600160601b03191660208084019182526001600160a01b03199094166034840152928252610f7d9082610142565b5190519060208110610f8d575090565b6000199060200360031b1b1690565b6001600160a01b0390911690610fb0610e8f565b9060005b825181101561101d57610fd260206104796104736104658588610c8d565b0381885afa90811561050d57600091610fff575b50600f0b610ff657600101610fb4565b50505050600190565b611017915060203d8111610506576104f88183610142565b38610fe6565b5050505060009056fef0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a164736f6c634300081b000a";

type VertexAssetGuardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VertexAssetGuardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VertexAssetGuard__factory extends ContractFactory {
  constructor(...args: VertexAssetGuardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      VertexAssetGuard & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VertexAssetGuard__factory {
    return super.connect(runner) as VertexAssetGuard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VertexAssetGuardInterface {
    return new Interface(_abi) as VertexAssetGuardInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): VertexAssetGuard {
    return new Contract(address, _abi, runner) as unknown as VertexAssetGuard;
  }
}
